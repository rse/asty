{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-merge.js","src/asty-dump.js","src/asty-version.js","src/asty.js","src/asty-walk.js"],"names":["ASTYBase","T","A","C","Error","this","ASTy","L","O","P","_name","hasOwnProperty","set","Array","add","arguments","length","args","_arguments","Object","keys","forEach","key","_this","_add","node","child","JSON","stringify","push","prototype","slice","call","arg","_this2","found","j","_this3","splice","ASTYMerge","takePos","attrMap","pos","attrs","attrSource","attrTarget","get","childs","ASTYDump","maxDepth","undefined","Infinity","out","walk","depth","i","first","value","replace","RegExp","toString","version","major","minor","micro","date","ASTYCtx","ASTYNode","mixins","_astyBaseJs2","_astyMergeJs2","_astyWalkJs2","_astyDumpJs2","mixin","proto","method","_astyVersionJs2","type","init","ASTYWalk","cb","when","_walk","parent"],"mappings":"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,EEHI,GFGC,SAAS,EACtB,EEJ4B,MFIpB,GAAG,QAAQ,CAAA;AFGvB,AEFA,eDHE,CDKE,AEFA,CFEC,AKPQ,CLOP,CEFC,EFEE,AGKF,CDPG,CFEC,CAAC,AEFA,CAAA,AGLS,CLOP,CAAC,CGKD,CHLG,CAAC,ACLf,EDKiB,CAAC,CCLd,CDKgB,CAAC,ACLf,EDKiB,CAAC,EAAE,CAAA,CCLb,EAAE,OAAO,EAAE;ADM3B,AEFA,gBFEI,AEFA,CFEC,AEFA,CFEC,GAAG,AEFA,CAAC,CFEC,CAAA,QEFA,IAAI,EAAE,KAAK,sBAAyB;AFG/C,AEFI,gBFEA,CAAC,CAAC,EEFE,CFEC,EAAE,CAAA,CEFE,GAAG,QAAQ,EAChB,OAAM;AFEd,AEDI,ADNJ,gBDOI,ACPA,CDOC,CAAC,GAAG,AEDA,EDNE,EDOE,AEDA,CFCA,AEDC,CDNC,AGFC,EFQC,CAAC,EAAE,ADNA,CCMC,GAAG,IDNI,CCMC,CDLzB,CCK2B,CAAC,AERC,EFQC,EDLxB,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;ADOvD,AEDQ,ADLR,eIHC,CLSG,ACNA,ODMO,AEDA,ADLA,CDMC,GEDG,EFCE,AKTf,CJGgB,CIHd,EHQiB,AGRf,CHQe,CDLE,EDME,AKTf,ELSiB,AKTf,OJGsB,EAC9B,OAAO,GAAG,KAAK,CAAA;ADMf,ACLJ,AIJA,gBJII,AIJA,CHOiB,AACjB,GAAG,CFCE,ECLE,AIJA,CHQA,CFCE,EKTE,CHQA,CAAC,CFCC,AEDA,ADJC,EIJE,CHQA,CFCC,CAAC,ACLC,CCIA,CAAA,MGRQ,EAC3B,CJG8B,EAC9B,CIJI,GAAG,GJIA,GAAG,EAAE,CAAA,CIJK,CAAA;ALSb,AEDJ,ADHJ,AIJA,gBJII,AIJA,IHOI,CGPC,EJIE,CDIC,AEDA,AGPA,CLQC,ACJA,CDIC,CEDC,MAAM,AGPjB,CHOkB,IAAI,AGPjB,CHOkB,AGPd,CLQe,CAAC,EEDE,AGPd,CHOe,CAAC,AGPd,CLQc,AEDC,CFCA,AEDA,EFEtB,CKTY,EAAE,CLSV,CAAC,GAAG,CAAC,AKTW,EAAK,GLSZ,EAAE,CAAC,CAAC,KAAI,CAAC,CAAC,CAAA;AED/B,ADHA,AIJA,iBLQ+B,GED3B,ADHA,AIJA,GJIG,CCGC,AGPA,CHOC,CDHC,AGRE,GCIC,CJIC,CCGC,ADHA,GCGG,ADHA,CCGC,CDHC,CCGC,ADHD,EIJG,GDJK,CCID,IAAI,KAAK,MAAM,EACtC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;AJIlD,AIHA,aLOH,OCJO,AIHA,CJGC,AIHA,CAAC,CAAC,CJGC,CAAC,GAAG,CAAC,CAAC,AIHA,CAAC,CJGC,GAAG,CAAC,CAAC,EAAE,EIHP,CJGU,CAAC,CAAC,CAAC,CAAA,AIHR,EAAK;ALQ9B,AEFQ,AGLA,aJGP,GDIG,OAAO,CAAC,CKPC,CAAC,CHKH,EFEM,EEFF,AGLI,EAAE,CHKH,CAAA,EFEO,CKPC,GLOG,AKPA,CLOC,AKPA,EAAE,IAAI,CAAC,CAAA,ILOK,KAAK,EAC3C,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AACf,AEHQ,ADFR,gBAAI,CAAC,AIHA,CAAC,CLQC,AKRD,GJGI,CDKC,CAAA,ACLC,CAAC,GCED,IDFQ,CCEH,ADFI,GCED,IAAI,CAAA,EDFF,UAAU,EAAK;ACG7B,ADFJ,AIHA,SLQP,WCLW,AIHA,IAAI,EDRI,EFaJ,CAAC,AGLI,CJGC,GACR,GCCU,CAAC,AGLI,GJIR,CIJY,CDRG,GCQC,EHKX,ADDE,CAAC,ECCA,AGLa,EHKR,IGLc,EJIT,AIH3B,CJG4B,CIH1B,CAAC,GJG8B,CIH1B,CAAC,IAAI,EAAE,GJG8B,CIH1B,EJIhB,AIJkB,KAAK,EJIhB,AIJkB,CJIjB,KIJuB,EAAE,GJIf,CAAC,GACnB,CILyC,CAAC,CAAA,OJKhC,AACf,CAAA;ACDO,ADER,aINH,CAAA,MJMO,UAAU,ECFF,CAAC,EDEM,GCFD,CDEK,CCDX,CDER,ECFW,IAAI,ADEV,GAAG,CCFW,ADEV,CCFU,KAEX,IDAW,CCAN,CDAQ,ECAL,EDAS,CAAC,ECAL,CAAA,ADAQ,CAAC,UAAU,CAAC,CAAC,CAAA;ACCtC,AGPZ,aJOC,CAAC,CAAA,EIPG,CAAC,IAAI,EAAE,CAAC,EAAE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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (T, A, C) {\n        if (typeof T === \"undefined\")\n            throw new Error(\"init: invalid argument\")\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (L, C, O) {\n        if (arguments.length === 0)\n            return this.L\n        else if (arguments.length <= 3) {\n            this.L.L = L || 0\n            this.L.C = C || 0\n            this.L.O = O || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set () {\n        if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n            let args = arguments\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (arguments.length === 2)\n            this.A[arguments[0]] = arguments[1]\n        else\n            throw new Error(\"set: invalid arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  add child AST node(s)  */\n    add () {\n        if (arguments.length === 0)\n            throw new Error(\"add: missing argument(s)\")\n        let _add = (node, child) => {\n            if (!((typeof child   === \"object\") &&\n                  (typeof child.T === \"string\") &&\n                  (typeof child.L === \"object\") &&\n                  (typeof child.A === \"object\") &&\n                  (typeof child.P === \"object\") &&\n                  (typeof child.C === \"object\" && child.C instanceof Array)))\n                throw new Error(`add: invalid AST node: ${ JSON.stringify(child) }`)\n            node.C.push(child)\n            child.P = node\n        }\n        if (arguments !== null) {\n            Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n                if (typeof arg === \"object\" && arg instanceof Array)\n                    arg.forEach((child) => { _add(this, child) })\n                else if (arg !== null)\n                    _add(this, arg)\n            })\n        }\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del () {\n        if (arguments.length === 0)\n            throw new Error(\"del: invalid argument\")\n        Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === arg) {\n                    this.C.splice(j, 1)\n                    arg.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: child not found\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos, attrMap) {\n        if (typeof node !== \"object\")\n            throw new Error(\"merge: invalid AST node argument\")\n        if (typeof takePos === \"undefined\")\n            takePos = false\n        if (typeof attrMap === \"undefined\")\n            attrMap = {}\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"string\":\n                            out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += \"/\" +\n                                    value.toString()\n                                    .replace(/^\\//, \"\")\n                                    .replace(/\\/$/, \"\")\n                                    .replace(/\\//g, \"\\\\/\") +\n                                \"/\"\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 1: false */\n/* global 4: false */\n/* global 20150523:  false */\n\nconst version = {\n    major: 1,\n    minor: 1,\n    micro: 4,\n    date:  20150523\n}\n\nexport default version\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase    from \"./asty-base.js\"\nimport ASTYMerge   from \"./asty-merge.js\"\nimport ASTYWalk    from \"./asty-walk.js\"\nimport ASTYDump    from \"./asty-dump.js\"\nimport ASTYVersion from \"./asty-version.js\"\n\nexport default class ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when) {\n        if (typeof when === \"undefined\")\n            when = \"downward\"\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n"]}