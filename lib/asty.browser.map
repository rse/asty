{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-dump.js","src/asty-merge.js","src/asty-version.js","src/asty-serialize.js","src/asty-walk.js","src/asty.js"],"names":["ASTYBase","ctx","T","A","C","arguments","length","Error","this","ASTy","L","O","P","_name","hasOwnProperty","set","Array","add","line","column","offset","args","_len","_key","Object","keys","forEach","key","_this","_len2","_key2","_this2","nth","indexOf","pos","_len3","_key3","_ins","node","_this3","isA","JSON","stringify","splice","arg","_len4","_key4","_add","_this4","push","_len5","_key5","_this5","found","j","ASTYDump","maxDepth","undefined","Infinity","out","walk","depth","i","first","value","hex","ch","charCodeAt","toString","toUpperCase","replace","RegExp","source","ASTYMerge","takePos","attrMap","attrs","attrSource","attrTarget","get","childs","child","version","major","minor","micro","date","ASTYSerialize","asty","serializeNode","clone","parse","map","json","unserializeNode","create","obj","ASTYWalk","cb","when","_walk","parent","call","ASTYCtx","ASTYNode","mixins","_astyBaseJs2","_astyMergeJs2","_astyWalkJs2","_astyDumpJs2","mixin","proto","prototype","slice","method","_astyVersionJs2","type","init","_astySerializeJs2","serialize","unserialize"],"mappings":"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E,YAAYhH,KAAMqF,OA5C1BU,wBAAAA;;;;;;;;;;;;;;;;;;;;;;INPA,QAAQ;aAAR,QAAQ;ICAR,QAAQ,kBDAR,QAAQ;aCAR,QAAQ;ICAR,SAAS,iBDAT,QAAQ;aCAR,IFAA,KEAS,GFAD;IIAR,aAAa,aFAb,SAAS;aEAT,IHAA,QAAQ,CGAK;ADKlC,IAAM,OAAO,GAAG,gBCLK,aAAa;ADM9B,SAAK,EAAE,CAAC,GHJH,EEFY,SAAS,GFEpB,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAChB,AGIJ,IEPiB,KFOZ,EAAE,CAAC,AEPiB,ILGjB,SAAS,CAAC,MAAM,GAAG,CAAC,EACpB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;AACxD,AGGJ,SAAK,EAAE,CAAC,CERS,EJEZ,CDGG,CAAC,AILQ,GJKL,CKLa,ELKV,GAAG,CAAA,ECHZ,CGFwB,OHEhB,EAAE;ADIZ,ACHA,AEMJ,QAAI,EAAG,MHHC,ACHA,CDGC,CGGM,GHHF,GAAG,ACHA,IDGI,CAAA,ACHC,CIHJ,QJGa,AIHL,EJIjB,QAAQ,GAAG,QAAQ,CAAA;ADGvB,ACFA,CEKP,CAAA,aDRS,CFKE,ACFA,CDEC,CAAC,CCFC,EDEE,CAAC,ACFA,CDEA,CCFE,CAAA,KCHT,IAAI,EAAiC;AFMxC,ACFA,gBDEI,ACFA,CDEC,ACFA,CDEC,GAAG,ACFA,CAAC,CDEC,CAAC,EAAE,AMRI,CNQH,EAAE,CAAC,EAAE,ACFT,CDEU,EAAE,CAAC,ACFT,EDEW,ACFT,CDEU,EAAE,CAAA,AMRK,CLMZ,sBAAyB;ADG/C,ACFI,eGLS,CJOT,CAAC,AKTQ,CLSP,ECFE,CDEC,AGGF,EHHI,CAAA,CCFE,AIPQ,GJOL,AEKF,MCVA,EHKU,EAChB,AGNU,EAAE,IAAI,CHMV,CGNY;AJQ1B,ACDI,AGNJ,gBJOI,AERK,AECH,CJOD,CAAC,GAAG,ACDA,EDCE,AERK,CFQL,CCDE,CAAC,GAAG,AGNE,CHMD,EAAE,AGNE,CHMD,GAAG,KAAK,AGNvB,EHMyB,CAAC,EAAE,QGNf,CAAI,IAAI,EAAK,mBFDb,KAAK;AFSxB,ACDQ,AGNJ,gBJOA,AETsB,CFSrB,CAAC,EIPE,CJOC,ECDE,ACRsB,EFSpB,AIPA,CJOA,CCDE,CGNC,KHMK,CAAA,8CCRe,EAAE;AFUtC,AIPQ,gBJOJ,CCFiB,AACjB,GAAG,CGNE,EJOE,AIPA,CJOC,ACDD,GGNI,AEJG,CLUH,AGNC,CJOC,ACDD,AGNC,CHMA,GAAG,GAAG,CDCE,ACDF,EDCI,KMXQ;ANY/B,ACDA,ACTJ,AEGQ,eCJP,CHCG,CAAC,GDSG,CDCC,AEVA,AEGA,CFHC,CEGC,CHMC,CDCC,AEVA,AEGA,CFHC,AEGA,CHMC,CGNC,CFHC,AGDf,CLWe,AEVC,CGDd,CDIgB,CHMC,AGNA,ACJI,CLWJ,ACDC,ACTA,AEGA,CJOA,AEVC,AEGA,CAAC,CFFpB,CDQsB,AGNA,CHMC,AGNA,EAAE,EHME,ACRrB,CDQsB,CAAC,AGNA,CHMC,AGNA,CHMA,ACRpB,AEEqB,CAAC,CAAC,EAAE,CFFpB,AEEqB,CFFpB,CEEsB,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,uBFFE,CAAC,CAAA;AFU/C,ACDJ,ACRJ,gBAAI,AGHE,CDKD,CAAA,EHMG,AIXE,GHGC,CFSC,ACDA,CDCC,ACDA,ACRA,CFSC,KCDK,GAAG,CAAC,EAAE,GDCG,CAAC,KAAI,CAAC,EACtB,IAAI,CAAC,GAAG,CAAC,KAAI,EAAE,CAAC,CAAC,KAAI,CAAC,CAAC,CAAA,EKbtB,UAAU;AHInB,AEEA,iBJO+B,GET3B,AEEA,GFFG,CEEC,EFFE,CEEC,GFFG,CAAC,EEEE,CFFC,AEEA,EFFE,CAAA,CEEE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AHM1B,ACPJ,AEEA,ACNJ,aLaC,GKbG,IHII,AEEA,CFFC,AGJA,GHIG,AEEA,ACNA,CHIC,AEEA,CEPK,CLYP,CCPK,CAAC,CAAC,CDOH,AGLI,CFFC,CGJhB,CJWc,AGLI,CHKJ,ACPK,AEEA,CFFC,CAAC,AEEA,CCNhB,CHIkB,AGJd,GHIiB,AILI,CJKH,AGJd,CHIe,CAAC,AGJd,CHIc,IGJT,EAAE,MAAM,EAAK;ALcrC,ACFQ,AGLA,ACNJ,aHIH,GFSG,IKbI,GLaG,CAAC,AKbA,CDMC,CAAC,CAAC,CHKH,CDEK,AKbA,CDMC,EAAE,CHKH,AGLG,GHKA,CDEK,EKbE,CJWH,CDEK,ACFL,CDEM,CKbC,IAAI,KAAK,ELaE,IKbI,CLaC,CKZvC,CLaJ,CKbM,CAAC,ELaH,CAAC,CKbM,CAAC,CLaJ,CAAC,CAAC,CAAC,AKbK,CLaL,CKbO,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;ALctD,ACHQ,ACPR,AEEQ,ACLJ,gBHGA,CAAC,EFUE,CKbC,CAAC,CHGC,AGHA,CLaC,AKbA,CLaA,AEVC,AEEA,CFFC,AEEA,GHKD,CAAC,CIVK,CAAC,CHGC,AEEA,CFFC,AEEA,GHKD,CAAC,IIVD,EHGE,AEEA,GAAG,ACLA,CJUH,CGLQ,ACLA,EJUL,EAAK,CCPE,EAAK;ADQzB,ACPR,AEEQ,ACLJ,SLaX,WEVW,KGHK,CAAC,EDKE,EFFE,CGHC,CJUH,CAAC,ACNP,AECW,ACLA,GDKG,EHKF,AIVI,EJWV,ACPC,AECW,CAAC,ACLA,CDKC,ACLA,CJWX,AGNY,CCLC,EDKE,CHMX,ACPC,AECW,CFDV,AECU,ACLC,CAAC,CAAA,CJWV,CAAA,KAEX,CCTmB,CAAC,GDSf,ECToB,CDSjB,KAAK,CAAA,ICTuB,GAC1C,OAAO,CAAC,UAAU,CAAC,GACnB,UAAU,AACf,CAAA;ADOO,ACNR,AEFQ,iBCLP,CAAC,CAAA,CHOE,MIZU,IJYA,CDMH,CGRK,GHQD,ACNI,GDMD,CCNK,AEFA,EHQF,ACLjB,CIb0B,EFUF,CHQH,CAAA,CCLhB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAA;ADMtC,AGRI,ACLZ,aHQH,CAAC,CAAA,KGRM,IAAI,KAAK,GJaD,CGRK,IHQA,AIbI,GJaD,CIbK,CDKC,CAAC,CHQH,CAAC,AIbI,CJaH,CAAC,GAAG,AIbI,CJaH,CAAA,IIbS,EACpC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;AJaxC,ACLZ,AEHgB,aCJf,CAAA,EHOG,CAAC,MAAM,EAAE,CAAC,OAAO,AEHA,CFGC,EDKF,KGRS,CAAC,CH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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (ctx, T, A, C) {\n        if (arguments.length < 2)\n            throw new Error(\"init: invalid number of arguments\")\n        this.ctx = ctx\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (line, column, offset) {\n        if (arguments.length === 0)\n            return {\n                line:   this.L.L,\n                column: this.L.C,\n                offset: this.L.O\n            }\n        else if (arguments.length <= 3) {\n            this.L.L = line   || 0\n            this.L.C = column || 0\n            this.L.O = offset || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set (...args) {\n        if (   args.length === 1\n            && typeof args[0] === \"object\") {\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (args.length === 2)\n            this.A[args[0]] = args[1]\n        else\n            throw new Error(\"set: invalid number of arguments\")\n        return this\n    }\n\n    /*  unset AST node attributes  */\n    unset (...args) {\n        if (   args.length === 1\n            && typeof args[0] === \"object\"\n            && args[0] instanceof Array   ) {\n            args[0].forEach((key) => {\n                delete this.A[key]\n            })\n        }\n        else if (args.length === 1)\n            delete this.A[args[0]]\n        else\n            throw new Error(\"unset: invalid number of arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid key argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  return current sibling position  */\n    nth () {\n        if (this.P === null)\n            return 1\n        let nth = this.P.C.indexOf(this)\n        if (nth < 0)\n            throw new Error(\"nth: internal error -- node not in childs of its parent\")\n        return nth\n    }\n\n    /*  insert child AST node(s)  */\n    ins (pos, ...args) {\n        if (args.length === 0)\n            throw new Error(\"ins: invalid number of arguments\")\n        if (pos < 0)\n            pos = (this.C.length + 1) - pos\n        if (!(0 < pos && pos < this.C.length))\n            throw new Error(\"ins: invalid position\")\n        let _ins = (node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(`ins: invalid AST node argument: ${ JSON.stringify(node) }`)\n            this.C.splice(pos++, 0, node)\n            node.P = this\n        }\n        args.forEach((arg) => {\n            if (typeof arg === \"object\" && arg instanceof Array)\n                arg.forEach((arg) => { _ins(arg) })\n            else if (arg !== null)\n                _ins(arg)\n        })\n        return this\n    }\n\n    /*  add child AST node(s)  */\n    add (...args) {\n        if (args.length === 0)\n            throw new Error(\"add: invalid number of arguments\")\n        let _add = (node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(`add: invalid AST node argument: ${ JSON.stringify(node) }`)\n            this.C.push(node)\n            node.P = this\n        }\n        args.forEach((arg) => {\n            if (typeof arg === \"object\" && arg instanceof Array)\n                arg.forEach((arg) => { _add(arg) })\n            else if (arg !== null)\n                _add(arg)\n        })\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del (...args) {\n        if (args.length === 0)\n            throw new Error(\"del: invalid number of argument\")\n        args.forEach((node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(`del: invalid AST node argument: ${ JSON.stringify(node) }`)\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === node) {\n                    this.C.splice(j, 1)\n                    node.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: AST node not found in childs\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"string\":\n                            let hex = (ch) => ch.charCodeAt(0).toString(16).toUpperCase()\n                            out += \"\\\"\" +\n                                value.replace(/\\\\/g, \"\\\\\\\\\")\n                                    .replace(/\"/g, \"\\\\\\\"\")\n                                    .replace(/\\x08/g, \"\\\\b\")\n                                    .replace(/\\t/g, \"\\\\t\")\n                                    .replace(/\\n/g, \"\\\\n\")\n                                    .replace(/\\f/g, \"\\\\f\")\n                                    .replace(/\\r/g, \"\\\\r\")\n                                    .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n                                    .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    (ch) => \"\\\\x\"  + hex(ch))\n                                    .replace(/[\\u0100-\\u0FFF]/g,         (ch) => \"\\\\u0\" + hex(ch))\n                                    .replace(/[\\u1000-\\uFFFF]/g,         (ch) => \"\\\\u\"  + hex(ch)) +\n                                \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += value.source\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos = false, attrMap = {}) {\n        if (!this.ctx.isA(node))\n            throw new Error(\"merge: invalid AST node argument\")\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 3: false */\n/* global 1: false */\n/* global 20150819:  false */\n\nconst version = {\n    major: 1,\n    minor: 3,\n    micro: 1,\n    date:  20150819\n}\n\nexport default version\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYSerialize {\n    /*  recursively serialize AST nodes into JSON string  */\n    static serialize (asty, node) {\n        const serializeNode = (node) => {\n            let clone = {\n                T: node.T,\n                L: { L: node.L.L, C: node.L.C, O: node.L.O }\n            }\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                clone.A = {}\n                keys.forEach((key) => {\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            clone.A[key] = value\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            clone.A[key] = JSON.parse(JSON.stringify(value))\n                            break\n                    }\n                })\n            }\n            if (node.C.length > 0)\n                clone.C = node.C.map((C) => serializeNode(C))\n            return clone\n        }\n        if (!asty.isA(node))\n            throw new Error(\"serialize: not an ASTy node\")\n        return JSON.stringify({ ASTy: serializeNode(node) })\n    }\n\n    /*  recursively unserialize JSON string into AST nodes  */\n    static unserialize (asty, json) {\n        const unserializeNode = (clone) => {\n            let node = asty.create(clone.T)\n            node.pos(clone.L.L, clone.L.C, clone.L.O)\n            if (typeof clone.A === \"object\") {\n                Object.keys(clone.A).forEach((key) => {\n                    let value = clone.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            node.set(key, value)\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            node.set(key, JSON.parse(JSON.stringify(value)))\n                            break\n                    }\n                })\n            }\n            if (typeof clone.C === \"object\" && clone.C instanceof Array)\n                node.add(clone.C.map((C) => unserializeNode(C)))\n            return node\n        }\n        let obj = JSON.parse(json)\n        if (typeof obj !== \"object\" || typeof obj.ASTy !== \"object\")\n            throw new Error(\"unserialize: not an ASTy JSON export\")\n        return unserializeNode(obj.ASTy)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when = \"downward\") {\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase      from \"./asty-base.js\"\nimport ASTYMerge     from \"./asty-merge.js\"\nimport ASTYWalk      from \"./asty-walk.js\"\nimport ASTYDump      from \"./asty-dump.js\"\nimport ASTYSerialize from \"./asty-serialize.js\"\nimport ASTYVersion   from \"./asty-version.js\"\n\nexport default class ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\",\n                         \"set\", \"unset\", \"get\", \"attrs\",\n                         \"nth\", \"ins\", \"add\", \"del\",\n                         \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(this, type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n    serialize (node) {\n        return ASTYSerialize.serialize(this, node)\n    }\n    unserialize (json) {\n        return ASTYSerialize.unserialize(this, json)\n    }\n}\n\n"]}