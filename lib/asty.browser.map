{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-serialize.js","src/asty-dump.js","src/asty-merge.js","src/asty-version.js","src/asty.js","src/asty-walk.js"],"names":["ASTYBase","T","A","C","Error","this","ASTy","L","O","P","_name","hasOwnProperty","set","Array","add","arguments","length","line","column","offset","args","_arguments","Object","keys","forEach","key","_this","_add","node","child","JSON","stringify","push","prototype","slice","call","arg","_this2","found","j","_this3","splice","ASTYSerialize","asty","serializeNode","clone","value","parse","map","isA","json","unserializeNode","create","pos","obj","ASTYDump","maxDepth","undefined","Infinity","out","walk","depth","i","first","hex","ch","charCodeAt","toString","toUpperCase","replace","RegExp","source","ASTYMerge","takePos","attrMap","attrs","attrSource","attrTarget","get","childs","version","major","minor","micro","date","ASTYCtx","ASTYNode","mixins","_astyBaseJs2","_astyMergeJs2","_astyWalkJs2","_astyDumpJs2","mixin","proto","method","_astyVersionJs2","type","init","_astySerializeJs2","serialize","unserialize","ASTYWalk","cb","when","_walk","parent"],"mappings":"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1BmC,wBAAAA;;;;;;;;;;;;;;;;;;;;;;ILPA,QAAQ;aAAR,QAAQ;IEAR,QAAQ,kBFAR,QAAQ;aEAR,QAAQ;ICAR,SAAS,iBDAT,QAAQ;aCAR,IHAA,KGAS,GHAD;ICAR,aAAa,aEAb,SAAS;aFAT,ICAA,QAAQ,CDAK;AGKlC,IAAM,OAAO,GAAG,gBHLK,aAAa;AGM9B,SAAK,EAAE,CAAC,GJJH,EGFY,SAAS,GHEpB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACX,AIIJ,IEPiB,KFOZ,EAAE,CAAC,AEPiB,INGjB,OAAO,CAAC,KAAK,WAAW,EACxB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;AAC7C,AIGJ,SAAK,EAAE,CAAC,CERS,EJEZ,CFGG,CAAC,ACLQ,IDKJ,AMLY,GNKT,IAAI,CAAA,AEHd,CDFwB,OCEhB,EAAE;AFIZ,AEHA,AEMJ,QAAI,EAAG,MJHC,AEHA,CFGC,CAAC,AIGK,GJHF,CAAC,CAAA,CEHE,KAAK,CIHJ,QJGa,AIHL,EJIjB,QAAQ,GAAG,QAAQ,CAAA;AFGvB,AEFA,CEKP,CAAA,aDRS,CHKE,AEFA,CFEC,CAAC,CEFC,EFEE,CEFC,CFEC,CAAC,AEFA,CAAA,CFEE,CAAC,EAAE,CAAC,AGLf,EHKiB,CAAC,CGLd,CHKgB,CAAC,AGLf,EHKiB,CAAC,EAAE,CAAA,CGLb,EAAE,OAAO,EAAE;AHM3B,AEFA,gBFEI,AEFA,CFEC,AEFA,CFEC,GAAG,AEFA,CAAC,CFEC,CAAA,EKRO,MHMP,IAAI,EAAE,IGNiB,CHMZ,sBAAyB;AFG/C,AEFI,eDLS,CDOT,CAAC,AMTQ,CNSP,EEFE,CFEC,AIGF,EJHI,CAAA,CEFE,AIPQ,GJOL,AEKF,MHVA,ECKU,EAChB,ADNU,EAAE,IAAI,CCMV,CDNY;ADQ1B,AEDI,ACNJ,AFAA,gBDOI,AGPA,AFAE,CDOD,CAAC,GAAG,AEDA,ECNE,EHOE,AEDA,CFCA,AEDC,CCNC,EDME,ADNE,CCMD,EAAE,ACNA,AFAE,CCMD,GAAG,ICNI,CDMC,ADNvB,CECF,CDK2B,CAAC,EAAE,ECLxB,IAAI,EFDK,CAAI,EECJ,CAAC,CFDO,EAAK,+BECsB,CAAC,CAAA;AHOvD,AEDQ,ACLR,AFDI,gBDOA,AGNA,IFDI,GDOG,AEDA,ACLA,CHMC,CCPC,ECME,CDNC,CDOC,CGNC,GDKG,CAAA,CCLE,EHME,EAAE,OGNO,EAC9B,OAAO,GAAG,KAAK,CAAA;AHMf,AGLJ,AFFQ,gBEEJ,CDGiB,AACjB,GAAG,CFCE,ACPA,EEEE,AFFA,CCMA,CFCE,ECPE,AIJG,CHUH,ADNC,CCMA,ADNC,CDOA,AEDA,ACJC,GDIE,CFCC,CAAC,AGLC,CDIA,CAAA,OGVY,EFMD,EAC9B,OAAO,GAAG,EAAE,CAAA;AHKR,AEDJ,ACHJ,AFHQ,eKJP,CHOG,IDGI,CDNC,EEGE,AFHA,CDOC,AEDA,CFCC,AGJA,AFHA,CDOC,ACPA,CCMC,CDNC,CKJd,EAAE,CLIgB,CCMC,ADNA,AKJf,CJUgB,ADNA,CAAC,CAAC,CKJd,CJUgB,ADNA,CCMC,ADNA,AKJf,CNWgB,CAAC,ACPA,ECME,CAAC,CAAC,ADNA,CDOA,AEDC,ADNA,CDOA,AEDA,ADNC,CAAC,CDQxB,ACRyB,EAAE,CAAC,CDQxB,CAAC,ACRyB,GDQtB,CAAC,ACRyB,CAAC,CAAC,CAAC,CAAC,CDQzB,CCR2B,CDQzB,CAAC,CAAC,KAAI,CAAC,CAAC,CAAA;AED/B,ACHA,AGPJ,gBAAI,CNW+B,ACP9B,CAAA,ECMG,ACHA,GAAG,AGPA,CJUC,CAAC,CCHC,CGPC,GHOG,CDGC,ACHA,CGPC,EJUE,ACHA,CDGC,CCHC,CDGC,ACHD,MGPO,EAC3B,IAAI,GAAG,UAAU,CAAA;AHOjB,AFHA,AKHJ,aNUC,GMVG,IHMI,AFHA,CEGC,AGNA,GHMG,AFHA,AKHA,CHMC,EFHE,CEGC,CAAC,CAAC,EAAE,CFHC,AKHjB,CLGkB,CEGC,CAAC,CAAC,CFHC,AKHjB,CHMkB,AFHA,AKHd,GHMiB,CAAC,AFHA,AKHd,CHMe,AFHA,CEGC,AFHA,AKHd,CHMc,AFHC,CAAA,GKHV,EAAE,MAAM,EAAK;ANWrC,AEFQ,ADLJ,AKHA,aHMH,GHIG,ICPI,AKHA,GNUG,CAAC,ACPA,AKHA,CLGC,CIPK,CHYP,EFEM,AMVA,EJQF,ADLI,GCKD,ADLI,CCKJ,ADLK,EDOE,ACPA,EKHE,ENUE,CAAC,AKdI,CCIH,IAAI,KAAK,ENUE,IMVI,CNUC,CMTvC,CNUJ,CMVM,CAAC,ENUH,CAAC,CMVM,CAAC,CNUJ,CAAC,CAAC,CAAC,AMVK,CNUL,CMVO,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;ANWtD,AEHQ,ACFR,AFHQ,AKFJ,gBHKA,CAAC,EHKE,CMVC,CAAC,CHKC,AGLA,CNUC,AMVA,CNUA,AGLC,CAAC,AFHA,CAAC,CAAC,CCKH,EDLM,AKFA,CAAC,CHKC,AFHA,CCKH,ACFI,AFHD,GCKA,IAAI,CAAA,AIPJ,EHKE,GGLG,EAAK,KHKE,EAAK;ADG7B,ACFJ,AFHI,AKFA,SNUX,WGLW,IFHI,CAAC,AKFA,CAAC,EJOF,CAAC,CCFK,CGLC,CLEC,CEIV,AFJW,AKFA,GJOD,CAAC,CIPK,EHMT,CGNY,CAAC,CLER,CKFU,ELEP,CCKH,ACDE,CAAC,AFJK,AKFM,CAAC,CJOZ,AIPY,EJOP,MCDK,CAAC,KAAK,WAAW,GAC1C,OAAO,CAAC,UAAU,CAAC,GACnB,UAAU,AACf,CAAA;ADDO,ACER,AFPQ,iBKFP,CAAC,CAAA,CHSE,QFPQ,EEOE,EDFF,CAAC,ADLI,EEOE,CFPC,ECKF,CCEK,CDDX,ADNY,CEQpB,AFRqB,CAAC,CCMX,ADNY,GAAG,CCMX,ACEV,AFRsB,CAAA,EEQnB,CDFW,ACEV,CDFU,KAEX,ICAW,CDAN,CCAQ,EDAL,ECAS,CAAC,EDAL,CAAA,ACAQ,CAAC,UAAU,CAAC,CAAC,CAAA;ADCtC,ADRA,AKFR,aHUH,CAAC,CAAA,KGVM,IAAI,EDRM,GCQD,EJUF,CDRK,GCQD,EIVM,CJUH,CDRK,ECQF,AIVI,CDRK,EJUF,CCQH,AIVI,CJUJ,IIVS,MAAM,EACpC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;AJUxC,ACAZ,AFRgB,aKDf,CAAA,EHSG,CAAC,MAAM,EAAE,CAAC,MDAE,CCAK,AFRA,CEQC,GDAD,GAAG,EDRM,CAAC,CCQH,ACAL,CDAM,CAAC,CAAC,ECAH,C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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (T, A, C) {\n        if (typeof T === \"undefined\")\n            throw new Error(\"init: invalid argument\")\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (line, column, offset) {\n        if (arguments.length === 0)\n            return {\n                line:   this.L.L,\n                column: this.L.C,\n                offset: this.L.O\n            }\n        else if (arguments.length <= 3) {\n            this.L.L = line   || 0\n            this.L.C = column || 0\n            this.L.O = offset || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set () {\n        if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n            let args = arguments\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (arguments.length === 2)\n            this.A[arguments[0]] = arguments[1]\n        else\n            throw new Error(\"set: invalid arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  add child AST node(s)  */\n    add () {\n        if (arguments.length === 0)\n            throw new Error(\"add: missing argument(s)\")\n        let _add = (node, child) => {\n            if (!((typeof child   === \"object\") &&\n                  (typeof child.T === \"string\") &&\n                  (typeof child.L === \"object\") &&\n                  (typeof child.A === \"object\") &&\n                  (typeof child.P === \"object\") &&\n                  (typeof child.C === \"object\" && child.C instanceof Array)))\n                throw new Error(`add: invalid AST node: ${ JSON.stringify(child) }`)\n            node.C.push(child)\n            child.P = node\n        }\n        if (arguments !== null) {\n            Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n                if (typeof arg === \"object\" && arg instanceof Array)\n                    arg.forEach((child) => { _add(this, child) })\n                else if (arg !== null)\n                    _add(this, arg)\n            })\n        }\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del () {\n        if (arguments.length === 0)\n            throw new Error(\"del: invalid argument\")\n        Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === arg) {\n                    this.C.splice(j, 1)\n                    arg.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: child not found\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYSerialize {\n    /*  recursively serialize AST nodes into JSON string  */\n    static serialize (asty, node) {\n        const serializeNode = (node) => {\n            let clone = {\n                T: node.T,\n                L: { L: node.L.L, C: node.L.C, O: node.L.O }\n            }\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                clone.A = {}\n                keys.forEach((key) => {\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            clone.A[key] = value\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            clone.A[key] = JSON.parse(JSON.stringify(value))\n                            break\n                    }\n                })\n            }\n            if (node.C.length > 0)\n                clone.C = node.C.map((C) => serializeNode(C))\n            return clone\n        }\n        if (!asty.isA(node))\n            throw new Error(\"failed to serialize: not an ASTy node\")\n        return JSON.stringify({ ASTy: serializeNode(node) })\n    }\n\n    /*  recursively unserialize JSON string into AST nodes  */\n    static unserialize (asty, json) {\n        const unserializeNode = (clone) => {\n            let node = asty.create(clone.T)\n            node.pos(clone.L.L, clone.L.C, clone.L.O)\n            if (typeof clone.A === \"object\") {\n                Object.keys(clone.A).forEach((key) => {\n                    let value = clone.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            node.set(key, value)\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            node.set(key, JSON.parse(JSON.stringify(value)))\n                            break\n                    }\n                })\n            }\n            if (typeof clone.C === \"object\" && clone.C instanceof Array)\n                node.add(clone.C.map((C) => unserializeNode(C)))\n            return node\n        }\n        let obj = JSON.parse(json)\n        if (typeof obj !== \"object\" || typeof obj.ASTy !== \"object\")\n            throw new Error(\"failed to unserialize: not an ASTy JSON export\")\n        return unserializeNode(obj.ASTy)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"string\":\n                            let hex = (ch) => ch.charCodeAt(0).toString(16).toUpperCase()\n                            out += \"\\\"\" +\n                                value.replace(/\\\\/g, \"\\\\\\\\\")\n                                    .replace(/\"/g, \"\\\\\\\"\")\n                                    .replace(/\\x08/g, \"\\\\b\")\n                                    .replace(/\\t/g, \"\\\\t\")\n                                    .replace(/\\n/g, \"\\\\n\")\n                                    .replace(/\\f/g, \"\\\\f\")\n                                    .replace(/\\r/g, \"\\\\r\")\n                                    .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n                                    .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    (ch) => \"\\\\x\"  + hex(ch))\n                                    .replace(/[\\u0100-\\u0FFF]/g,         (ch) => \"\\\\u0\" + hex(ch))\n                                    .replace(/[\\u1000-\\uFFFF]/g,         (ch) => \"\\\\u\"  + hex(ch)) +\n                                \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += value.source\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos, attrMap) {\n        if (typeof node !== \"object\")\n            throw new Error(\"merge: invalid AST node argument\")\n        if (typeof takePos === \"undefined\")\n            takePos = false\n        if (typeof attrMap === \"undefined\")\n            attrMap = {}\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 2: false */\n/* global 0: false */\n/* global 20150531:  false */\n\nconst version = {\n    major: 1,\n    minor: 2,\n    micro: 0,\n    date:  20150531\n}\n\nexport default version\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase      from \"./asty-base.js\"\nimport ASTYMerge     from \"./asty-merge.js\"\nimport ASTYWalk      from \"./asty-walk.js\"\nimport ASTYDump      from \"./asty-dump.js\"\nimport ASTYSerialize from \"./asty-serialize.js\"\nimport ASTYVersion   from \"./asty-version.js\"\n\nexport default class ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n    serialize (node) {\n        return ASTYSerialize.serialize(this, node)\n    }\n    unserialize (json) {\n        return ASTYSerialize.unserialize(this, json)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when) {\n        if (typeof when === \"undefined\")\n            when = \"downward\"\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n"]}