{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-dump.js","src/asty-serialize.js","src/asty-merge.js","src/asty-version.js","src/asty-walk.js","src/asty.js"],"names":["ASTYBase","T","A","C","Error","this","ASTy","L","O","P","_name","hasOwnProperty","set","Array","add","arguments","length","args","_arguments","Object","keys","forEach","key","_this","_add","node","child","JSON","stringify","push","prototype","slice","call","arg","_this2","found","j","_this3","splice","ASTYDump","maxDepth","undefined","Infinity","out","walk","depth","i","first","value","hex","ch","charCodeAt","toString","toUpperCase","replace","RegExp","source","ASTYSerialize","asty","serializeNode","clone","parse","map","isA","json","unserializeNode","create","pos","obj","ASTYMerge","takePos","attrMap","attrs","attrSource","attrTarget","get","childs","version","major","minor","micro","date","ASTYWalk","cb","when","_walk","parent","ASTYCtx","ASTYNode","mixins","_astyBaseJs2","_astyMergeJs2","_astyWalkJs2","_astyDumpJs2","mixin","proto","method","_astyVersionJs2","type","init","_astySerializeJs2","serialize","unserialize"],"mappings":"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R,QAAQ;aCAR,QAAQ;IEAR,SAAS,iBFAT,QAAQ;aEAR,IHAA,KGAS,GHAD;IEAR,aAAa,aCAb,SAAS;aDAT,IDAA,QAAQ,CCAK;AEKlC,IAAM,OAAO,GAAG,gBFLK,aAAa;AEM9B,SAAK,EAAE,CAAC,GJJH,EGFY,SAAS,GHEpB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACX,AIIJ,ICPiB,KDOZ,EAAE,CAAC,ACPiB,ILGjB,OAAO,CAAC,KAAK,WAAW,EACxB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;AAC7C,AIGJ,SAAK,EAAE,CAAC,CCRS,EJEZ,CDGG,CAAC,AELQ,IFKJ,AKLY,GLKT,IAAI,CAAA,ACHd,CCFwB,ODEhB,EAAE;ADIZ,ACHA,AGMJ,QAAI,EAAG,MJHC,ACHA,CDGC,CAAC,AIGK,GJHF,CAAC,CAAA,CCHE,KAAK,CIHJ,QJGa,AIHL,EJIjB,QAAQ,GAAG,QAAQ,CAAA;ADGvB,ACFA,CGKP,CAAA,aDRS,CHKE,ACFA,CDEC,CAAC,CCFC,EDEE,CCFC,CDEC,CAAC,ACFA,CAAA,CDEE,CAAC,EAAE,CAAC,AGLf,EHKiB,CAAC,CGLd,CHKgB,CAAC,AGLf,EHKiB,CAAC,EAAE,CAAA,CGLb,EAAE,OAAO,EAAE;AHM3B,ACFA,gBDEI,ACFA,CDEC,ACFA,CDEC,GAAG,ACFA,CAAC,CDEC,CAAA,EMRO,MLMP,IAAI,EAAE,IKNiB,CLMZ,sBAAyB;ADG/C,ACFI,eCLS,CFOT,CAAC,AKTQ,CLSP,ECFE,CDEC,AIGF,EJHI,CAAA,CCFE,AIPQ,GJOL,AGKF,MFVA,EDKU,EAChB,ACNU,EAAE,IAAI,CDMV,CCNY;AFQ1B,ACDI,AENJ,ADAA,gBFOI,AGPA,ADAE,CFOD,CAAC,GAAG,ACDA,EENE,EHOE,ACDA,CDCA,ACDC,CENC,EFME,ACNE,CDMD,EAAE,AENA,ADAE,CDMD,GAAG,IENI,CFMC,ACNvB,CCCF,CFK2B,CAAC,EAAE,EELxB,IAAI,EDDK,CAAI,ECCJ,CAAC,CDDO,EAAK,+BCCsB,CAAC,CAAA;AHOvD,ACDQ,AELR,ADDI,gBFOA,AGNA,IDDI,GFOG,ACDA,AELA,CHMC,CEPC,EDME,CCNC,CFOC,CGNC,GFKG,CAAA,CELE,EHME,EAAE,OGNO,EAC9B,OAAO,GAAG,KAAK,CAAA;AHMf,AGLJ,ADFQ,gBCEJ,CFGiB,AACjB,GAAG,CDCE,AEPA,ECEE,ADFA,CDMA,CDCE,EEPE,AIJG,CLUH,ACNC,CDMA,ACNC,CFOA,ACDA,AEJC,GFIE,CDCC,CAAC,AGLC,CFIA,CAAA,OKVY,EHMD,EAC9B,OAAO,GAAG,EAAE,CAAA;AHKR,ACDJ,AEHJ,ADHQ,eGJP,CFOG,IFGI,CCNC,ECGE,ADHA,CFOC,ACDA,CDCC,AGJA,ADHA,CFOC,AEPA,CDMC,CCNC,CGJd,EAAE,CHIgB,CDMC,ACNA,AGJf,CJUgB,ACNA,CAAC,CAAC,CGJd,CJUgB,ACNA,CDMC,ACNA,AGJf,CLWgB,CAAC,AEPA,EDME,CAAC,CAAC,ACNA,CFOA,ACDC,ACNA,CFOA,ACDA,ACNC,CAAC,CFQxB,AERyB,EAAE,CAAC,CFQxB,CAAC,AERyB,GFQtB,CAAC,AERyB,CAAC,CAAC,CAAC,CAAC,CFQzB,CER2B,CFQzB,CAAC,CAAC,KAAI,CAAC,CAAC,CAAA;ACD/B,AEHA,AEPJ,gBAAI,CLW+B,AEP9B,CAAA,EDMG,AEHA,GAAG,AEPA,CJUC,CAAC,CEHC,CEPC,GFOG,CFGC,AEHA,CEPC,EJUE,AEHA,CFGC,CEHC,CFGC,AEHD,MEPO,EAC3B,IAAI,GAAG,UAAU,CAAA;AFOjB,ADHA,AGHJ,aLUC,GKVG,IFMI,ADHA,CCGC,AENA,GFMG,ADHA,AGHA,CFMC,EDHE,CCGC,CAAC,CAAC,EAAE,CDHC,AGHjB,CHGkB,CCGC,CAAC,CAAC,CDHC,AGHjB,CFMkB,ADHA,AGHd,GFMiB,CAAC,ADHA,AGHd,CFMe,ADHA,CCGC,ADHA,AGHd,CFMc,ADHC,CAAA,GGHV,EAAE,MAAM,EAAK;ALWrC,ACFQ,ACLJ,AGHA,aFMH,GHIG,IEPI,AGHA,GLUG,CAAC,AEPA,AGHA,CHGC,CIPK,CLYP,EDEM,AKVA,EJQF,ACLI,GDKD,ACLI,CDKJ,ACLK,EFOE,AEPA,EGHE,ELUE,CAAC,AMdI,CDIH,IAAI,KAAK,ELUE,IKVI,CLUC,CKTvC,CLUJ,CKVM,CAAC,ELUH,CAAC,CKVM,CAAC,CLUJ,CAAC,CAAC,CAAC,AKVK,CLUL,CKVO,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;ALWtD,ACHQ,AEFR,ADHQ,AGFJ,gBFKA,CAAC,EHKE,CKVC,CAAC,CFKC,AELA,CLUC,AKVA,CLUA,AGLC,CAAC,ADHA,CAAC,CAAC,CDKH,ECLM,AGFA,CAAC,CFKC,ADHA,CDKH,AEFI,ADHD,GDKA,IAAI,CAAA,AIPJ,EFKE,GELG,EAAK,KFKE,EAAK;AFG7B,AEFJ,ADHI,AGFA,SLUX,WGLW,IDHI,CAAC,AGFA,CAAC,EJOF,CAAC,CEFK,CELC,CHEC,CCIV,ADJW,AGFA,GJOD,CAAC,CIPK,EFMT,CENY,CAAC,CHER,CGFU,EHEP,CDKH,AEDE,CAAC,ADJK,AGFM,CAAC,CJOZ,AIPY,EJOP,MEDK,CAAC,KAAK,WAAW,GAC1C,OAAO,CAAC,UAAU,CAAC,GACnB,UAAU,AACf,CAAA;AFDO,AEER,ADPQ,iBGFP,CAAC,CAAA,CFSE,QDPQ,ECOE,EFFF,CAAC,ACLI,ECOE,CDPC,EDKF,CEEK,CFDX,ACNY,CCQpB,ADRqB,CAAC,CDMX,ACNY,GAAG,CDMX,AEEV,ADRsB,CAAA,ECQnB,CFFW,AEEV,CFFU,KAEX,IEAW,CFAN,CEAQ,EFAL,EEAS,CAAC,EFAL,CAAA,AEAQ,CAAC,UAAU,CAAC,CAAC,CAAA;AFCtC,ACRA,AGFR,aFUH,CAAC,CAAA,KEVM,IAAI,ECRM,GDQD,EJUF,CCRK,GDQD,EIVM,CJUH,CCRK,EDQF,AIVI,CCRK,EJUF,CDQH,AIVI,CJUJ,IIVS,MAAM,EACpC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;AJUxC,AEAZ,ADRgB,aGDf,CAAA,EFSG,CAAC,MAAM,EAAE,CAAC,MFAE,CEAK,ADRA,CCQC,GFAD,GAAG,ECRM,CAAC,CDQH,AEAL,CFAM,CAAC,CAAC,EEAH,CFAM,CAAC,AEAF,CFAE;AACvB,AEAR,ADRY,AGDhB,iBAAK,CAAC,IFSG,AETC,EAAE,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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (T, A, C) {\n        if (typeof T === \"undefined\")\n            throw new Error(\"init: invalid argument\")\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (L, C, O) {\n        if (arguments.length === 0)\n            return this.L\n        else if (arguments.length <= 3) {\n            this.L.L = L || 0\n            this.L.C = C || 0\n            this.L.O = O || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set () {\n        if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n            let args = arguments\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (arguments.length === 2)\n            this.A[arguments[0]] = arguments[1]\n        else\n            throw new Error(\"set: invalid arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  add child AST node(s)  */\n    add () {\n        if (arguments.length === 0)\n            throw new Error(\"add: missing argument(s)\")\n        let _add = (node, child) => {\n            if (!((typeof child   === \"object\") &&\n                  (typeof child.T === \"string\") &&\n                  (typeof child.L === \"object\") &&\n                  (typeof child.A === \"object\") &&\n                  (typeof child.P === \"object\") &&\n                  (typeof child.C === \"object\" && child.C instanceof Array)))\n                throw new Error(`add: invalid AST node: ${ JSON.stringify(child) }`)\n            node.C.push(child)\n            child.P = node\n        }\n        if (arguments !== null) {\n            Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n                if (typeof arg === \"object\" && arg instanceof Array)\n                    arg.forEach((child) => { _add(this, child) })\n                else if (arg !== null)\n                    _add(this, arg)\n            })\n        }\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del () {\n        if (arguments.length === 0)\n            throw new Error(\"del: invalid argument\")\n        Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === arg) {\n                    this.C.splice(j, 1)\n                    arg.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: child not found\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"string\":\n                            let hex = (ch) => ch.charCodeAt(0).toString(16).toUpperCase()\n                            out += \"\\\"\" +\n                                value.replace(/\\\\/g, \"\\\\\\\\\")\n                                    .replace(/\"/g, \"\\\\\\\"\")\n                                    .replace(/\\x08/g, \"\\\\b\")\n                                    .replace(/\\t/g, \"\\\\t\")\n                                    .replace(/\\n/g, \"\\\\n\")\n                                    .replace(/\\f/g, \"\\\\f\")\n                                    .replace(/\\r/g, \"\\\\r\")\n                                    .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n                                    .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    (ch) => \"\\\\x\"  + hex(ch))\n                                    .replace(/[\\u0100-\\u0FFF]/g,         (ch) => \"\\\\u0\" + hex(ch))\n                                    .replace(/[\\u1000-\\uFFFF]/g,         (ch) => \"\\\\u\"  + hex(ch)) +\n                                \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += value.source\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYSerialize {\n    /*  recursively serialize AST nodes into JSON string  */\n    static serialize (asty, node) {\n        const serializeNode = (node) => {\n            let clone = {\n                T: node.T,\n                L: { L: node.L.L, C: node.L.C, O: node.L.O }\n            }\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                clone.A = {}\n                keys.forEach((key) => {\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            clone.A[key] = value\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            clone.A[key] = JSON.parse(JSON.stringify(value))\n                            break\n                    }\n                })\n            }\n            if (node.C.length > 0)\n                clone.C = node.C.map((C) => serializeNode(C))\n            return clone\n        }\n        if (!asty.isA(node))\n            throw new Error(\"failed to serialize: not an ASTy node\")\n        return JSON.stringify({ ASTy: serializeNode(node) })\n    }\n\n    /*  recursively unserialize JSON string into AST nodes  */\n    static unserialize (asty, json) {\n        const unserializeNode = (clone) => {\n            let node = asty.create(clone.T)\n            node.pos(clone.L.L, clone.L.C, clone.L.O)\n            if (typeof clone.A === \"object\") {\n                Object.keys(clone.A).forEach((key) => {\n                    let value = clone.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            node.set(key, value)\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            node.set(key, JSON.parse(JSON.stringify(value)))\n                            break\n                    }\n                })\n            }\n            if (typeof clone.C === \"object\" && clone.C instanceof Array)\n                node.add(clone.C.map((C) => unserializeNode(C)))\n            return node\n        }\n        let obj = JSON.parse(json)\n        if (typeof obj !== \"object\" || typeof obj.ASTy !== \"object\")\n            throw new Error(\"failed to unserialize: not an ASTy JSON export\")\n        return unserializeNode(obj.ASTy)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos, attrMap) {\n        if (typeof node !== \"object\")\n            throw new Error(\"merge: invalid AST node argument\")\n        if (typeof takePos === \"undefined\")\n            takePos = false\n        if (typeof attrMap === \"undefined\")\n            attrMap = {}\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 2: false */\n/* global 0: false */\n/* global 20150531:  false */\n\nconst version = {\n    major: 1,\n    minor: 2,\n    micro: 0,\n    date:  20150531\n}\n\nexport default version\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when) {\n        if (typeof when === \"undefined\")\n            when = \"downward\"\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase      from \"./asty-base.js\"\nimport ASTYMerge     from \"./asty-merge.js\"\nimport ASTYWalk      from \"./asty-walk.js\"\nimport ASTYDump      from \"./asty-dump.js\"\nimport ASTYSerialize from \"./asty-serialize.js\"\nimport ASTYVersion   from \"./asty-version.js\"\n\nexport default class ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n    serialize (node) {\n        return ASTYSerialize.serialize(this, node)\n    }\n    unserialize (json) {\n        return ASTYSerialize.unserialize(this, json)\n    }\n}\n\n"]}