{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-dump.js","src/asty-merge.js","src/asty-version.js","src/asty-serialize.js","src/asty-walk.js","src/asty.js"],"names":["ASTYBase","ctx","T","A","C","arguments","length","Error","this","ASTy","L","O","P","_typeof","name","hasOwnProperty","set","Array","add","line","column","offset","args","_len","_key","Object","keys","forEach","key","_this","undefined","_this2","idx","indexOf","pos","_len2","_key2","_ins","node","_this3","isA","splice","arg","_len3","_key3","_add","_this4","push","_len4","_key4","_this5","found","j","serialize","ASTYDump","maxDepth","Infinity","out","walk","depth","i","first","value","toString","hex","ch","charCodeAt","toUpperCase","replace","RegExp","source","JSON","stringify","ASTYMerge","takePos","attrMap","attrs","attrSource","attrTarget","get","childs","child","version","major","minor","micro","date","ASTYSerialize","asty","serializeNode","clone","parse","map","json","unserializeNode","create","obj","ASTYWalk","cb","when","_walk","parent","call","ASTYCtx","ASTYNode","mixins","_astyBase2","_astyMerge2","_astyWalk2","_astyDump2","mixin","proto","prototype","slice","method","_astyVersion2","type","init","_astySerialize2","unserialize","module","exports"],"mappings":"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UAAU;AACZ,WAAO,CAAP;AACA,IEPiB,OFOV,CAAP;AACA,WAAO,CAAP,iBHNM,KAAK,GAAG,GAAG,GAAG;AAChB,AGMJ,UAAO,MHNC,EGMR,QHNkB,MAAV,GAAmB,CAAnB,EACA,MAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN,CADJ;AAEA,CGAF,gBHAO,GAAL,GAAW,GAAX,CAHgB,ECAd,CCAC,MAAqC,GDA5B;ADIZ,ACHA,gBAAI,CDGC,IAAL,GAAY,IAAZ,CAJgB,ACCC,SAAb,EACA,WAAW,QAAX,CADJ;ADIA,ACFA,gBAAI,CDEC,CAAL,AGKO,GHLE,CAAT,ACFU,CDHM,CCGZ,CAHQ;ADMZ,ACFA,gBCJS,CFMJ,ACFA,CDEL,GAAS,ACFT,CAAU,CDEC,GAAG,CAAH,EAAM,GAAG,ACFT,CDEM,EAAM,CCFb,EDEgB,ACFT,CDEM,EAAvB,CANgB,qBCIN,EAAqC,eCJ5B,qBAAqB;AFOxC,ACFI,gBCLsB,CFOrB,CAAL,ECFQ,CDEC,EAAT,CAPgB,ICKA,MGLF,EHKN,EACA,EGNY,KHKhB,CGLsB,kCFAU,kBAAI;AFQxC,ACDI,AGNJ,gBAAM,CJOD,CAAL,GAAS,ACDA,EDCT,CARgB,CCOH,IAAI,CAAJ,EAAO,AGNE,IHME,KAAJ,AGNd,EHMyB,GAA3B,QGNkB,CAAC,IAAD,EAAU;AJQhC,ACDQ,ACPR,AECI,gBFDA,CFQC,AERA,CFQL,EIPQ,CJOC,CERC,GFQV,AERK,CFDW,AECF,CDOC,CGNC,CFDX,AGDH,CHCgB,GDOV,AIRiB,CHCpB,CAAD,EACA,MAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN,CADJ;AFSA,AEPA,AEAQ,gBJOJ,AEPA,AGHE,CJOF,GAEA,GCNJ,AEAW,CJOA,ACDA,CCNE,GEAG,CHMA,AGNL,CHMA,GAAS,GAAT,CALoC,gCDM3C,KAAa,GKVJ,KLUT,EAAuB,mBKVF;ALWrB,ACDA,ACNA,AEAI,oBHMA,ACNA,CFOC,EIPE,EJOE,AIPA,CFAC,CDMC,CGNC,CJOP,EEPU,EFOE,AIPA,CJOjB,ACDkB,ACNR,AEAE,CAAO,CFAf,AEAQ,CFDH,CDOE,AGNW,CHMC,EGNE,GHMG,CAAL,CAAnB,AGN0B,CHAa,AGAlB,CAAO,CAAP,EAAU,GAAG,KAAK,CAAL,CAAO,CAAP,EAAlC;AJQA,ACDJ,ACNA,AGJJ,gBAAI,CDCI,CADwB,EHUxB,CCNC,GFOG,AEPR,AGJQ,CJUC,ACNA,CFOC,GEPG,CAAJ,CDML,CCNY,CGJhB,CJUkB,CAAd,CCNgB,CDMC,ACNL,CGJR,CHIe,AGJd,CLWD,CAAiB,EEPE,AGJnB,CHIe,CFOf,AEPR,AGJe,CLWX,AETK,EFUD,EKZA,EAAc,CLYT,GAAL,CAAS,CKZT,EAAyB,CLYzB,EAAe,EAAE,IAAF,CAAf,EADJ;AINJ,ACJA,aHCJ,IFQI,GILI,ACJA,ODIO,ECJE,KDIK,IAAP,CAAY,ACJnB,IAAuB,CDIC,CAAL,CAAnB,CALwB,KCCQ,MAAT,EACvB,GAAG,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoB,KAApB,EAA2B,MAA3B,EAAmC,UAAnC,EADJ;AJUI,ACLR,AEAI,ACHA,aLMJ,IEHK,GEAG,CCHC,CHGT,AGHI,CAAO,EHGE,AEAA,KCHT,CJQW,AGLP,ACHW,CHGnB,CAAqB,CDKb,AGLc,CAAd,EAAiB,ICHL,EHGE,GGHH,EAAW,KHGT,EAAgB;AFQrC,ACFQ,ACLJ,AEAI,ACHA,gBLUJ,IEPI,IFOG,EIPG,ACHA,CDGN,CHKI,EGLM,CCHV,CDGA,CFCE,AEFe,ACFJ,GJQD,IAAR,ACJK,CGJY,CAAR,EAAW,IHIP,AGJjB,EADsB,QHKb,CAAP,KAA+B,KFMrC,KAAa,CENP,GACA,IFKN,IAAyB,AELX,UAAR,CADA,EFMgC,CEJhC,IFImB,EACzB,IEPM,CFOD,AET4B,GFSjC,CAAS,CAAT,EADJ;AAEA,ACHQ,ACDJ,AEJI,iBCLW,CAAf,CLaG,AKhB8B,CHY7B,GFIR,CAjBgB,CISH,IHKA,GGLL,CAAa,EFIE,CDCf,CAAa,ECDb,EACA,EELc,GAAD,CHKC,ACAT,CELiB,EHKT,ACAb,CAAS,CDAa,SCAtB,EAAqB,KAAK,GAAL,CAAS,UAAT,CAArB,EADJ;ADEQ,AGLA,ACHR,aHAiB,CAArB,CAPwC,KGOhC,QDGQ,CCHC,GJQD,CAAC,GGLO,CCHhB,CJQQ,EACA,CGNa,ACHA,CDGL,CAAO,GAAP,CHMD,AGNP,CADc,ECFQ,CJStB,CADJ,IIRiB,CJWb,CIVR,GAAG,IJUa,AIVhB,CAAQ,IJUA,AIVR,CJOI,CIPU,IAAd,EAAoB,KAApB,EAA2B,MAA3B,EAAmC,QAAnC,EADJ;AJYQ,ACHZ,AELY,aCVA,CADa,GHgBpB,MAAL,GAAc,OAAd,CAAsB,CDGH,IGRQ,EHQF,GCHF,CDGJ,CALW,GCER,EAAW,wCELrB;AHSA,ACHR,AELY,ACFhB,kBAAM,IHOG,AGPT,EAAY,CHOR,AGPJ,CHOa,CGPE,IHOX,AGPJ,CJUgB,CCJiB,AEJZ,ACZI,OJoBD,EGRR,CADJ,EHSiB,CAAL,CAAO,GAAP,CAAR,CANc;AAOlB,AGRI,ACFhB,aHKsB,CAAtB,CAhBwC,IGWjC,IAAP,CAXyB,SDaJ,QAAL,CAFJ,CHUe,oDAAf;AACI,ACHhB,AELgB,mBFKT,IAAP,CAnBwC,SEcnB,IHQA,IGRL,KHQA,CADJ;AAEI,AGRI,qCHQC,CGRK,CAAN,CAAQ,GAAR,EHQJ,EGRmB,KAAf,CADJ;AHUI,AGRA,6BJKlB,GAAG,MIPW,KHUW,MAAM,QAAN,EAAP,CADJ;ADDhB,ACGoB,AGdR,IENd,ODPe,KLwBT,UAAU,MAAV,KAAqB,CAArB,EACA,ECAY,KDAL,KAAK,CAAL,CADX,KAEK,IAAI,UAAU,MAAV,KAAqB,CAArB,EAAwB;AAC7B,ACJQ,AKfhB,WJRiB,EIOf,OACF,CNmBa,CAAL,CMnBO,ENmBE,CAAT,CAD6B,UCEZ,QAAL;ADAZ,ACCgB,AGRA,uBJOT,IAAP,CAF6B,UILP,CAAN,CHQI,AGRI,GAAR,GHQU,CGRK,KAAK,GHQhB,EGRW,CHQL,AGRgB,CHQf,EAAD,EGRqB,SAAL,CAAe,KAAf,CAAX,CAAf,CAFJ;AAGI,aJIf,MAKD,MAAM,IAAI,KAAJ,CAAU,GIZJ,SHUsB,GAAG,UAAH,CAAc,CAAd,EAAiB,MDE7C,CAAN,CALC,ACGiC,CAA0B,EAA1B,EAA8B,WAA9B;AGhB1B,yBAFkB,KEJhC,OLsBgC,CADd,CKpBL;ALsBS,qBGnBC,CAAb,CAFiB,oBHqBE,OACH,MAAM,OAAN,CAAc,KAAd,EA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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (ctx, T, A, C) {\n        if (arguments.length < 2)\n            throw new Error(\"init: invalid number of arguments\")\n        this.ctx = ctx\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (line, column, offset) {\n        if (arguments.length === 0)\n            return {\n                line:   this.L.L,\n                column: this.L.C,\n                offset: this.L.O\n            }\n        else if (arguments.length <= 3) {\n            this.L.L = line   || 0\n            this.L.C = column || 0\n            this.L.O = offset || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set (...args) {\n        if (   args.length === 1\n            && typeof args[0] === \"object\") {\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (args.length === 2)\n            this.A[args[0]] = args[1]\n        else\n            throw new Error(\"set: invalid number of arguments\")\n        return this\n    }\n\n    /*  unset AST node attributes  */\n    unset (...args) {\n        if (   args.length === 1\n            && typeof args[0] === \"object\"\n            && args[0] instanceof Array   ) {\n            args[0].forEach((key) => {\n                delete this.A[key]\n            })\n        }\n        else if (args.length === 1)\n            delete this.A[args[0]]\n        else\n            throw new Error(\"unset: invalid number of arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid key argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  return current sibling position  */\n    nth () {\n        if (this.P === null)\n            return 1\n        let idx = this.P.C.indexOf(this)\n        if (idx < 0)\n            throw new Error(\"nth: internal error -- node not in childs of its parent\")\n        return idx\n    }\n\n    /*  insert child AST node(s)  */\n    ins (pos, ...args) {\n        if (args.length === 0)\n            throw new Error(\"ins: invalid number of arguments\")\n        if (pos < 0)\n            pos = (this.C.length + 1) - pos\n        if (!(0 <= pos && pos <= this.C.length))\n            throw new Error(\"ins: invalid position\")\n        let _ins = (node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(\"ins: invalid AST node argument\")\n            this.C.splice(pos++, 0, node)\n            node.P = this\n        }\n        args.forEach((arg) => {\n            if (typeof arg === \"object\" && arg instanceof Array)\n                arg.forEach((arg) => { _ins(arg) })\n            else if (arg !== null)\n                _ins(arg)\n        })\n        return this\n    }\n\n    /*  add child AST node(s)  */\n    add (...args) {\n        if (args.length === 0)\n            throw new Error(\"add: invalid number of arguments\")\n        let _add = (node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(\"add: invalid AST node argument\")\n            this.C.push(node)\n            node.P = this\n        }\n        args.forEach((arg) => {\n            if (typeof arg === \"object\" && arg instanceof Array)\n                arg.forEach((arg) => { _add(arg) })\n            else if (arg !== null)\n                _add(arg)\n        })\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del (...args) {\n        if (args.length === 0)\n            throw new Error(\"del: invalid number of argument\")\n        args.forEach((node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(\"del: invalid AST node argument\")\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === node) {\n                    this.C.splice(j, 1)\n                    node.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: AST node not found in childs\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n\n    /*  serialize AST node recursively  */\n    serialize () {\n        return this.ctx.serialize(this.ctx, this)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                            out += value.toString()\n                            break\n                        case \"string\":\n                            let hex = (ch) => ch.charCodeAt(0).toString(16).toUpperCase()\n                            out += \"\\\"\" +\n                                value.replace(/\\\\/g, \"\\\\\\\\\")\n                                    .replace(/\"/g, \"\\\\\\\"\")\n                                    .replace(/\\x08/g, \"\\\\b\")\n                                    .replace(/\\t/g, \"\\\\t\")\n                                    .replace(/\\n/g, \"\\\\n\")\n                                    .replace(/\\f/g, \"\\\\f\")\n                                    .replace(/\\r/g, \"\\\\r\")\n                                    .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n                                    .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    (ch) => \"\\\\x\"  + hex(ch))\n                                    .replace(/[\\u0100-\\u0FFF]/g,         (ch) => \"\\\\u0\" + hex(ch))\n                                    .replace(/[\\u1000-\\uFFFF]/g,         (ch) => \"\\\\u\"  + hex(ch)) +\n                                \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += value.source\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos = false, attrMap = {}) {\n        if (!this.ctx.isA(node))\n            throw new Error(\"merge: invalid AST node argument\")\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 4: false */\n/* global 2: false */\n/* global 20160207:  false */\n\nconst version = {\n    major: 1,\n    minor: 4,\n    micro: 2,\n    date:  20160207\n}\n\nexport default version\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYSerialize {\n    /*  recursively serialize AST nodes into JSON string  */\n    static serialize (asty, node) {\n        const serializeNode = (node) => {\n            let clone = {\n                T: node.T,\n                L: { L: node.L.L, C: node.L.C, O: node.L.O }\n            }\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                clone.A = {}\n                keys.forEach((key) => {\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            clone.A[key] = value\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            clone.A[key] = JSON.parse(JSON.stringify(value))\n                            break\n                    }\n                })\n            }\n            if (node.C.length > 0)\n                clone.C = node.C.map((C) => serializeNode(C))\n            return clone\n        }\n        if (!asty.isA(node))\n            throw new Error(\"serialize: not an ASTy node\")\n        return JSON.stringify({ ASTy: serializeNode(node) })\n    }\n\n    /*  recursively unserialize JSON string into AST nodes  */\n    static unserialize (asty, json) {\n        const unserializeNode = (clone) => {\n            let node = asty.create(clone.T)\n            node.pos(clone.L.L, clone.L.C, clone.L.O)\n            if (typeof clone.A === \"object\") {\n                Object.keys(clone.A).forEach((key) => {\n                    let value = clone.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            node.set(key, value)\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            node.set(key, JSON.parse(JSON.stringify(value)))\n                            break\n                    }\n                })\n            }\n            if (typeof clone.C === \"object\" && clone.C instanceof Array)\n                node.add(clone.C.map((C) => unserializeNode(C)))\n            return node\n        }\n        let obj = JSON.parse(json)\n        if (typeof obj !== \"object\" || typeof obj.ASTy !== \"object\")\n            throw new Error(\"unserialize: not an ASTy JSON export\")\n        return unserializeNode(obj.ASTy)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when = \"downward\") {\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase      from \"./asty-base.js\"\nimport ASTYMerge     from \"./asty-merge.js\"\nimport ASTYWalk      from \"./asty-walk.js\"\nimport ASTYDump      from \"./asty-dump.js\"\nimport ASTYSerialize from \"./asty-serialize.js\"\nimport ASTYVersion   from \"./asty-version.js\"\n\nclass ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\",\n                         \"set\", \"unset\", \"get\", \"attrs\",\n                         \"nth\", \"ins\", \"add\", \"del\",\n                         \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(this, type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n    serialize (node) {\n        return ASTYSerialize.serialize(this, node)\n    }\n    unserialize (json) {\n        return ASTYSerialize.unserialize(this, json)\n    }\n}\n\n/*  export the traditional way for interoperability reasons\n    (as Babel would export an object with a 'default' field)  */\nmodule.exports = ASTYCtx\n\n"]}