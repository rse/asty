{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-dump.js","src/asty-base.js","src/asty-merge.js","src/asty-version.js","src/asty-walk.js","src/asty.js","src/asty-serialize.js"],"names":["ASTYDump","maxDepth","undefined","Infinity","out","this","walk","node","depth","i","T","keys","Object","A","length","first","forEach","key","value","hex","ch","charCodeAt","toString","toUpperCase","replace","RegExp","source","JSON","stringify","L","C","ASTYBase","ctx","arguments","Error","ASTy","O","P","_name","hasOwnProperty","set","Array","add","line","column","offset","args","_len","_key","_this","_len2","_key2","_this2","nth","indexOf","pos","_len3","_key3","_ins","_this3","isA","splice","arg","_len4","_key4","_add","_this4","push","_len5","_key5","_this5","found","j","ASTYMerge","takePos","attrMap","attrs","attrSource","attrTarget","get","childs","child","version","major","minor","micro","date","ASTYWalk","cb","when","_walk","parent","call","ASTYCtx","ASTYNode","mixins","_astyBaseJs2","_astyMergeJs2","_astyWalkJs2","_astyDumpJs2","mixin","proto","prototype","slice","method","_astyVersionJs2","type","init","_astySerializeJs2","serialize","json","unserialize","ASTYSerialize","asty","serializeNode","clone","parse","map","unserializeNode","create","obj"],"mappings":"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,WAAcC,UAAUxG,KAAME,8BAE7B,SAACuG,GACT,MAAOF,mBAAA,WAAcG,YAAY1G,KAAMyG,OA5C1BjB,wBAAAA;;;;;;;;;;;;;;;;;;;;;;IJPA,QAAQ;aAAR,QAAQ;IDAR,QAAQ,kBCAR,QAAQ;aDAR,QAAQ;IEAR,SAAS,iBFAT,QAAQ;aEAR,IDAA,KCAS,GDAD;IKAR,aAAa,aJAb,SAAS;aIAT,INAA,QAAQ,CMAK;AHKlC,IAAM,OAAO,GAAG,gBGLK,aAAa;AHM9B,SAAK,EAAE,CAAC,GFJH,ECFY,SAAS,GDEpB,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAChB,AEIJ,ICPiB,KDOZ,EAAE,CAAC,ACPiB,IHGjB,SAAS,CAAC,MAAM,GAAG,CAAC,EACpB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;AACxD,AEGJ,SAAK,EAAE,CAAC,CCRS,EJEZ,CCGG,CAAC,AKLQ,GLKL,CGLa,EHKV,GAAG,CAAA,EDHZ,CMFwB,ONEhB,EAAE;ACIZ,ADHA,AGMJ,QAAI,EAAG,MFHC,ADHA,CCGC,CEGM,GFHF,GAAG,ADHA,ICGI,CAAA,ADHC,CIHJ,QJGa,AIHL,EJIjB,QAAQ,GAAG,QAAQ,CAAA;ACGvB,ADFA,CGKP,CAAA,aDRS,CDKE,ADFA,CCEC,CAAC,CDFC,ECEE,CAAC,ADFA,CCEA,CDFE,CAAA,KEHT,IAAI,EAAiC;ADMxC,ADFA,gBCEI,ADFA,CCEC,ADFA,CCEC,GAAG,ADFA,CAAC,CCEC,CAAC,EAAE,AIRI,CJQH,EAAE,CAAC,EAAE,ADFT,CCEU,EAAE,CAAC,ADFT,ECEW,ADFT,CCEU,EAAE,CAAA,AIRK,CLMZ,sBAAyB;ACG/C,ADFI,eMLS,CLOT,CAAC,AGTQ,CHSP,EDFE,CCEC,AEGF,EFHI,CAAA,CDFE,AIPQ,GJOL,AGKF,MGVA,ENKU,EAChB,AMNU,EAAE,IAAI,CNMV,CMNY;ALQ1B,ADDI,AMNJ,gBLOI,ACRK,AICH,CLOD,CAAC,GAAG,ADDA,ECCE,ACRK,CDQL,CDDE,CAAC,GAAG,AMNE,CNMD,EAAE,AMNE,CNMD,GAAG,KAAK,AMNvB,ENMyB,CAAC,EAAE,QMNf,CAAI,IAAI,EAAK,mBJDb,KAAK;ADSxB,ADDQ,AMNJ,gBLOA,ACTsB,CDSrB,CAAC,EKPE,CLOC,EDDE,AERsB,EDSpB,AKPA,CLOA,CDDE,CMNC,KNMK,CAAA,8CERe,EAAE;ADUtC,AKPQ,gBLOJ,CDFiB,AACjB,GAAG,CMNE,ELOE,AKPA,CLOC,ADDD,GMNI,ADJG,CLUH,AMNC,CLOC,ADDD,AMNC,CNMA,GAAG,GAAG,CCCE,ADDF,ECCI,KIXQ;AJY/B,ADDA,AETJ,AIGQ,eFJP,CFCG,CAAC,GFSG,CCCC,ACVA,AIGA,CJHC,CIGC,CNMC,CCCC,ACVA,AIGA,CJHC,AIGA,CNMC,CMNC,CJHC,AEDf,CHWe,ACVC,CEDd,CEIgB,CNMC,AMNA,AFJI,CHWJ,ADDC,AETA,AIGA,CLOA,ACVC,AIGA,CAAC,CJFpB,CFQsB,AMNA,CNMC,AMNA,EAAE,ENME,AERrB,CFQsB,CAAC,AMNA,CNMC,AMNA,CNMA,AERpB,AIEqB,CAAC,CAAC,EAAE,CJFpB,AIEqB,CJFpB,CIEsB,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,uBJFE,CAAC,CAAA;ADU/C,ADDJ,AERJ,gBAAI,AEHE,CEKD,CAAA,ENMG,AIXE,GFGC,CDSC,ADDA,CCCC,ADDA,AERA,CDSC,KDDK,GAAG,CAAC,EAAE,GCCG,CAAC,KAAI,CAAC,EACtB,IAAI,CAAC,GAAG,CAAC,KAAI,EAAE,CAAC,CAAC,KAAI,CAAC,CAAC,CAAA,EGbtB,UAAU;AFInB,AIEA,iBLO+B,GCT3B,AIEA,GJFG,CIEC,EJFE,CIEC,GJFG,CAAC,EIEE,CJFC,AIEA,EJFE,CAAA,CIEE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;ANM1B,AEPJ,AIEA,AFNJ,aHaC,GGbG,IFII,AIEA,CJFC,AEJA,GFIG,AIEA,AFNA,CFIC,AIEA,CDPK,CLYP,CEPK,CAAC,CAAC,CFOH,AMLI,CJFC,CEJhB,CJWc,AMLI,CNKJ,AEPK,AIEA,CJFC,CAAC,AIEA,CFNhB,CFIkB,AEJd,GFIiB,AGLI,CHKH,AEJd,CFIe,CAAC,AEJd,CFIc,IEJT,EAAE,MAAM,EAAK;AHcrC,ADFQ,AMLA,AFNJ,aFIH,GDSG,IGbI,GHaG,CAAC,AGbA,CEMC,CAAC,CAAC,CNKH,CCEK,AGbA,CEMC,EAAE,CNKH,AMLG,GNKA,CCEK,EGbE,CJWH,CCEK,ADFL,CCEM,CGbC,IAAI,KAAK,EHaE,IGbI,CHaC,CGZvC,CHaJ,CGbM,CAAC,EHaH,CAAC,CGbM,CAAC,CHaJ,CAAC,CAAC,CAAC,AGbK,CHaL,CGbO,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;AHctD,ADHQ,AEPR,AIEQ,AFLJ,gBFGA,CAAC,EDUE,CGbC,CAAC,CFGC,AEHA,CHaC,AGbA,CHaA,ACVC,AIEA,CJFC,AIEA,GNKD,CAAC,CIVK,CAAC,CFGC,AIEA,CJFC,AIEA,GNKD,CAAC,IIVD,EFGE,AIEA,GAAG,AFLA,CJUH,CMLQ,AFLA,EJUL,EAAK,CEPE,EAAK;AFQzB,AEPR,AIEQ,AFLJ,SHaX,WCVW,KEHK,CAAC,EEKE,EJFE,CEHC,CJUH,CAAC,AENP,AICW,AFLA,GEKG,ENKF,AIVI,EJWV,AEPC,AICW,CAAC,AFLA,CEKC,AFLA,CJWX,AMNY,CFLC,EEKE,CNMX,AEPC,AICW,CJDV,AICU,AFLC,CAAC,CAAA,CJWV,CAAA,KAEX,CETmB,CAAC,GFSf,EEToB,CFSjB,KAAK,CAAA,IETuB,GAC1C,OAAO,CAAC,UAAU,CAAC,GACnB,UAAU,AACf,CAAA;AFOO,AENR,AIFQ,iBFLP,CAAC,CAAA,CFOE,MGZU,IHYA,CFMH,CMRK,GNQD,AENI,GFMD,CENK,AIFA,ENQF,AELjB,CGb0B,ECUF,CNQH,CAAA,CELhB,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAA;AFMtC,AMRI,AFLZ,aFQH,CAAC,CAAA,KERM,IAAI,KAAK,GJaD,CMRK,INQA,AIbI,GJaD,CIbK,CEKC,CAAC,CNQH,CAAC,AIbI,CJaH,CAAC,GAAG,AIbI,CJaH,CAAA,IIbS,EACpC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;AJaxC,AELZ,AIHgB,aFJf,CAAA,E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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"string\":\n                            let hex = (ch) => ch.charCodeAt(0).toString(16).toUpperCase()\n                            out += \"\\\"\" +\n                                value.replace(/\\\\/g, \"\\\\\\\\\")\n                                    .replace(/\"/g, \"\\\\\\\"\")\n                                    .replace(/\\x08/g, \"\\\\b\")\n                                    .replace(/\\t/g, \"\\\\t\")\n                                    .replace(/\\n/g, \"\\\\n\")\n                                    .replace(/\\f/g, \"\\\\f\")\n                                    .replace(/\\r/g, \"\\\\r\")\n                                    .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n                                    .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    (ch) => \"\\\\x\"  + hex(ch))\n                                    .replace(/[\\u0100-\\u0FFF]/g,         (ch) => \"\\\\u0\" + hex(ch))\n                                    .replace(/[\\u1000-\\uFFFF]/g,         (ch) => \"\\\\u\"  + hex(ch)) +\n                                \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += value.source\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (ctx, T, A, C) {\n        if (arguments.length < 2)\n            throw new Error(\"init: invalid number of arguments\")\n        this.ctx = ctx\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (line, column, offset) {\n        if (arguments.length === 0)\n            return {\n                line:   this.L.L,\n                column: this.L.C,\n                offset: this.L.O\n            }\n        else if (arguments.length <= 3) {\n            this.L.L = line   || 0\n            this.L.C = column || 0\n            this.L.O = offset || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set (...args) {\n        if (   args.length === 1\n            && typeof args[0] === \"object\") {\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (args.length === 2)\n            this.A[args[0]] = args[1]\n        else\n            throw new Error(\"set: invalid number of arguments\")\n        return this\n    }\n\n    /*  unset AST node attributes  */\n    unset (...args) {\n        if (   args.length === 1\n            && typeof args[0] === \"object\"\n            && args[0] instanceof Array   ) {\n            args[0].forEach((key) => {\n                delete this.A[key]\n            })\n        }\n        else if (args.length === 1)\n            delete this.A[args[0]]\n        else\n            throw new Error(\"unset: invalid number of arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid key argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  return current sibling position  */\n    nth () {\n        if (this.P === null)\n            return 1\n        let nth = this.P.C.indexOf(this)\n        if (nth < 0)\n            throw new Error(\"nth: internal error -- node not in childs of its parent\")\n        return nth\n    }\n\n    /*  insert child AST node(s)  */\n    ins (pos, ...args) {\n        if (args.length === 0)\n            throw new Error(\"ins: invalid number of arguments\")\n        if (pos < 0)\n            pos = (this.C.length + 1) - pos\n        if (!(0 <= pos && pos <= this.C.length))\n            throw new Error(\"ins: invalid position\")\n        let _ins = (node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(`ins: invalid AST node argument: ${ JSON.stringify(node) }`)\n            this.C.splice(pos++, 0, node)\n            node.P = this\n        }\n        args.forEach((arg) => {\n            if (typeof arg === \"object\" && arg instanceof Array)\n                arg.forEach((arg) => { _ins(arg) })\n            else if (arg !== null)\n                _ins(arg)\n        })\n        return this\n    }\n\n    /*  add child AST node(s)  */\n    add (...args) {\n        if (args.length === 0)\n            throw new Error(\"add: invalid number of arguments\")\n        let _add = (node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(`add: invalid AST node argument: ${ JSON.stringify(node) }`)\n            this.C.push(node)\n            node.P = this\n        }\n        args.forEach((arg) => {\n            if (typeof arg === \"object\" && arg instanceof Array)\n                arg.forEach((arg) => { _add(arg) })\n            else if (arg !== null)\n                _add(arg)\n        })\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del (...args) {\n        if (args.length === 0)\n            throw new Error(\"del: invalid number of argument\")\n        args.forEach((node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(`del: invalid AST node argument: ${ JSON.stringify(node) }`)\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === node) {\n                    this.C.splice(j, 1)\n                    node.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: AST node not found in childs\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos = false, attrMap = {}) {\n        if (!this.ctx.isA(node))\n            throw new Error(\"merge: invalid AST node argument\")\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 3: false */\n/* global 3: false */\n/* global 20150819:  false */\n\nconst version = {\n    major: 1,\n    minor: 3,\n    micro: 3,\n    date:  20150819\n}\n\nexport default version\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when = \"downward\") {\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase      from \"./asty-base.js\"\nimport ASTYMerge     from \"./asty-merge.js\"\nimport ASTYWalk      from \"./asty-walk.js\"\nimport ASTYDump      from \"./asty-dump.js\"\nimport ASTYSerialize from \"./asty-serialize.js\"\nimport ASTYVersion   from \"./asty-version.js\"\n\nexport default class ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\",\n                         \"set\", \"unset\", \"get\", \"attrs\",\n                         \"nth\", \"ins\", \"add\", \"del\",\n                         \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(this, type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n    serialize (node) {\n        return ASTYSerialize.serialize(this, node)\n    }\n    unserialize (json) {\n        return ASTYSerialize.unserialize(this, json)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYSerialize {\n    /*  recursively serialize AST nodes into JSON string  */\n    static serialize (asty, node) {\n        const serializeNode = (node) => {\n            let clone = {\n                T: node.T,\n                L: { L: node.L.L, C: node.L.C, O: node.L.O }\n            }\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                clone.A = {}\n                keys.forEach((key) => {\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            clone.A[key] = value\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            clone.A[key] = JSON.parse(JSON.stringify(value))\n                            break\n                    }\n                })\n            }\n            if (node.C.length > 0)\n                clone.C = node.C.map((C) => serializeNode(C))\n            return clone\n        }\n        if (!asty.isA(node))\n            throw new Error(\"serialize: not an ASTy node\")\n        return JSON.stringify({ ASTy: serializeNode(node) })\n    }\n\n    /*  recursively unserialize JSON string into AST nodes  */\n    static unserialize (asty, json) {\n        const unserializeNode = (clone) => {\n            let node = asty.create(clone.T)\n            node.pos(clone.L.L, clone.L.C, clone.L.O)\n            if (typeof clone.A === \"object\") {\n                Object.keys(clone.A).forEach((key) => {\n                    let value = clone.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            node.set(key, value)\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            node.set(key, JSON.parse(JSON.stringify(value)))\n                            break\n                    }\n                })\n            }\n            if (typeof clone.C === \"object\" && clone.C instanceof Array)\n                node.add(clone.C.map((C) => unserializeNode(C)))\n            return node\n        }\n        let obj = JSON.parse(json)\n        if (typeof obj !== \"object\" || typeof obj.ASTy !== \"object\")\n            throw new Error(\"unserialize: not an ASTy JSON export\")\n        return unserializeNode(obj.ASTy)\n    }\n}\n\n"]}