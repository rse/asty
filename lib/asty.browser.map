{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-dump.js","src/asty-walk.js","src/asty.js","src/asty-merge.js","src/asty-serialize.js","src/asty-version.js"],"names":["ASTYBase","ctx","T","A","C","arguments","length","Error","this","ASTy","L","O","P","_typeof","name","hasOwnProperty","set","Array","add","line","column","offset","args","_len","_key","Object","keys","forEach","key","_this","_this2","idx","indexOf","pos","_len2","_key2","_ins","node","_this3","isA","splice","arg","_len3","_key3","_add","_this4","push","_len4","_key4","_this5","found","j","serialize","ASTYDump","maxDepth","undefined","Infinity","out","walk","depth","i","first","value","toString","hex","ch","charCodeAt","toUpperCase","replace","RegExp","source","JSON","stringify","ASTYWalk","cb","when","_walk","parent","call","child","ASTYCtx","ASTYNode","mixins","_astyBase2","_astyMerge2","_astyWalk2","_astyDump2","mixin","proto","prototype","slice","method","_astyVersion2","type","init","_astySerialize2","json","unserialize","module","exports","ASTYMerge","takePos","attrMap","attrs","attrSource","attrTarget","get","childs","ASTYSerialize","asty","serializeNode","clone","parse","map","unserializeNode","create","obj","version","major","minor","micro","date"],"mappings":"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3C,UAAU5C,KAAM6B,uCAE5B2D,GACT,MAAOD,iBAAAA,WAAcE,YAAYzF,KAAMwF,OA5CzChB,IAkDNkB,QAAOC,QAAUnB;;;;;;;;;;;;;;;;;;;;;;;;IHzDI,QAAQ;aAAR,QAAQ;ICAR,AGAA,QHAQ,CGAC,iBJAT,QAAQ;aCAR,AGAA,QHAQ,CGAC;8BHAT,AGAA,QHAQ,CGAC;iBJAT,QAAQ;AMK7B,IDLqB,ACKf,OAAO,GAAG,GDLkB;ACM9B,SAAK,EAAE,CAAC,CDNS,IJAA,AGAA,QHAQ,CGAC,ACAI;ACO9B,IJPiB,KIOZ,EAAE,CAAC,AJPiB,kBGAR,aAAa;ACQ9B,SAAK,EAAE,CAAC,CJRS,QAAQ,QFEnB,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAChB,AMMJ,QAAI,EAAG,MNNC,EMMO,ONNE,CAAC,IEHD,EFGO,GAAG,CAAC,EACpB,AEJiB,MFIX,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;AACxD,CMKP,CAAA,cNLW,CAAC,AKLQ,GLKL,GAAG,GAAG,CAAA,ECHZ,CGAC,ACFuB,IDEnB,EAAiC,CHA9B,EAAE;ADIZ,ACHA,gBDGI,ACHA,CDGC,IAAI,GAAG,ACHA,IDGI,CAAA,ACHC,SAAS,EACtB,QAAQ,GAAG,QAAQ,CAAA;ADGvB,ACFA,gBDEI,ACFA,CDEC,AEPQ,CFOP,AMKC,CLPA,EDEE,CAAC,ACFA,CDEA,CCFE,CAAA,AKOE,AJZO;AFQrB,ACFA,gBDEI,ACFA,AGJK,CJMJ,ACFA,CDEC,GAAG,ACFA,CAAC,CDEC,AINK,CJMJ,EAAE,CAAC,EAAE,CAAC,EAAE,ACFT,CDEU,EAAE,CAAC,ACFT,EDEW,ACFT,CDEU,EAAE,CAAA,qBCFP,EAAyB,eGJ5B,KAAK;AJOxB,ACFI,gBDEA,AIPsB,CJOrB,CAAC,ECFE,CDEC,EAAE,AIPsB,CJOtB,CCFE,GAAG,MILF,EJKU,EAChB,AINU,EAAE,IAAI,CJMV,CINY,kCDAU,EAAE;AJQtC,ACDI,AINJ,gBLOI,AKPE,CLOD,CAAC,GAAG,ACDA,EDCE,CAAA,CCDE,CAAC,GAAG,AINE,CJMD,EAAE,AINE,CJMD,GAAG,KAAK,AINvB,EJMyB,CAAC,EAAE,QINf,CAAI,IAAI,EAAK;ALQhC,ACDQ,AGPR,ACCI,gBLOA,AIRA,CJQC,AIRA,CJQC,EKPE,CLOC,AIRA,CAAC,CHOC,EDCE,AIRA,ACCA,CLOA,AIRC,CHOC,CINC,CDDC,AFDf,CECgB,CFDd,EDQiB,ACRI,CDQJ,AGPC,CAAC,EACnB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;AJQvD,AIPA,ACAQ,gBLOJ,AIPA,AFHE,CDQe,AACjB,GAAG,ACTG,CGGD,EDAE,ACAA,CLOA,ACDA,CDCC,AIPC,ECAE,CJMA,AINC,CJMA,AINC,CJMA,GAAG,GAAG,CAAA,6BDCZ,CAAC,OAAK,GEVJ,KFUY,EAAE,GEVJ;AFWnB,ACDA,AGNA,ACAI,oBJMA,AGNA,CJOC,AKPA,EDAE,ACAA,CJMC,CDCC,AKPA,CDAC,ACAA,CJMC,CINC,CLOC,CIPC,CAAC,CCAC,CLOC,ACDA,AINA,CLOC,ACDA,AGNA,ACAA,CAAC,CDAC,ACAA,CDAA,CHME,AINA,CJMC,AINA,EAAE,EJME,CAAC,CAAC,AINA,CJMC,AINA,CJMA,AINC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;ALQ5C,ACDJ,AGNA,AFJJ,gBAAI,CGIC,CAAA,EJMG,AGNA,CAAC,AFJA,GFWG,ACDA,AGNA,AFJA,CFWC,ACDA,AGNA,CJOC,EIPE,CAAC,CAAC,CHMC,CGNC,CFJhB,CDUkB,CAAC,AGNA,CAAC,CHMC,AGNA,CFJhB,CEIkB,AFJd,CFWe,CAAC,CIPC,CAAC,AFJd,CEIe,CJOC,AIPA,AFJd,CFWe,AIPD,EJQrB,EEZY,EFYR,AEZU,CFYT,GAAG,CAAC,CEZW,EAAK,CFYZ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;AKP/B,AHJA,aEIH,IJOkC,GKP3B,AHJA,IGII,AHJA,GGIG,EHJE,IGII,CAAC,IAAI,CAAC,AHJA,IGII,AHJA,CGIC,CAAC,CAAC,CAAA,AHJC,KAAK,MAAM,EACtC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;ADS9C,AGLR,ACAI,AHHA,aFUH,GIPG,CAAC,GCAG,AHHA,CAAC,CEGC,AFHA,CAAC,CEGC,ACAA,CDAC,ACAA,EJKF,GCRO,CDQH,AILI,AHHA,CEGC,CAAC,CHKH,AILI,CJKJ,AILK,EAAE,IHHL,EEGE,GFHG,EAAK,KEGE,EAAK;AJQrC,ACFQ,AGLJ,ACAI,AHHA,gBFUJ,IIPI,IJOG,CAAC,AKPC,AHHA,CGGC,AHHA,CGGC,CJKH,EGLM,ACAA,CHHC,CGGC,CJKH,AGJP,ACDU,AHHC,GDQD,ECRM,EDQF,AGJP,CHIO,ACRK,CAAC,EAAE,GEIR,CAAC,AFJW,CAAC,CAAA,QEIF,CAAC,KAAK,EJM9B,CAAC,OAAK,CINmC,GAC1C,IJKe,GILR,CJKY,AILX,CJKY,SILF,CAAC,EJKa,CIJhC,IJIqC,EAC3C,IAAI,AILY,AACf,CJII,AIJJ,GJIO,CAAC,CAAC,CAAC,CAAA;AACf,ACHQ,AGDJ,ACJI,iBHHH,CAAC,CFWC,AEXD,CEOE,GJIG,CAAA,AKRC,CAAC,GJKD,CAAC,CGDK,ECJE,CAAC,EDIE,CHCH,CAAC,EGDM,EACnB,ECLc,GAAG,CJKH,AGAT,CCLiB,EJKL,AGAT,CAAC,CHAa,SGAH,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAA;AHCtC,AILA,AHHR,SFWP,IIHI,CAAC,CAAA,KFRM,IAAI,IGGI,CHHC,GDQD,CAAC,AILI,GAAG,CHHC,CDQH,EACN,AINY,CAAC,AHHA,CGGC,CJMX,AINY,EHHE,CGGC,CJMX,AINY,CAAA,EHHG,CDSX,CAAA,ICTiB,CDW5B,CCVR,EAAE,CAAC,CDUU,GAAG,ACVT,CAAC,IDUa,ACVT,CDUS,CCVP,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;ADWxC,AGHZ,ACLY,aHFX,CAAA,EEOG,CAAC,MAAM,EAAE,CAAC,KHGC,EGHM,CAAC,CHGH,GAAG,CIRK,EJQF,GGHF,ACLS,CJQH,CAAA,GGHD,EAAK,kCCLN,KAAK;AJSpB,AGHR,ACLY,AHFhB,iBAAK,CAAC,IEOG,AFPC,EAAE,CEOA,AFPC,CEOA,CFPE,IEOG,AFPC,CDUH,AGHG,AFPC,CEOD,ACLE,AHFD,IDUC,GAAG,EIRM,CAAC,CJQH,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACvB,AIRI,AHFhB,aEOC,CAAC,CAAA,IFPK,IAAI,CAAA,SGEU,QAAQ,CAAC,CJQH,KAAK,yCAAL,KAAK;AAChB,AGHhB,ACLgB,SHFnB,UEOU,IAAI,CAAA,SCLU,IJQA,IIRQ,KJQC,CAAC;AACf,AIRI,SDKvB,4BHGwB,AIRI,CAAC,CAAC,CAAC,GAAG,CAAC,CJQH,EIRM,KAAK,CAAA;AJSpB,AIRA,6BLKlB,CAAC,EAAE,MKLoB,CJQF,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAA;ADF3C,ACGoB,AITK,AACT,IFZlB,ODPe,ACOR,KHiBD,GExBiB,MFwBR,CAAC,MAAM,KAAK,CAAC,EACtB,ECEqB,KDFd,IAAI,CAAC,CAAC,CAAA,KACZ,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B,ACAqB,AACT,AEpBpB,WCRiB,EDOf,OHoBU,AI3Bc,ADOjB,CHoBI,CAAC,CGnBC,EHmBE,CAAC,CAAA,UCCO,QAAQ;ADAzB,ACCgB,AIRA,uBLOT,IAAI,CAAA,SKPU,CAAC,CAAC,CJQH,AIRI,GJQD,AIRI,CAAC,EJQF,CIRK,IAAI,CAAC,GJQhB,EIRqB,CJQlB,AIRmB,CJQf,EAAE,CIRiB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAA;AAChD,aLOnB,KE7BY,CF+BT,MAAM,CE/BW,GF+BP,KAAK,CAAC,GKTK,SJOa,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MDEA,CAAC,CAAA,ACFO,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE;AIPxD,SLU5B,SIhCgB,OCuBA,EDvBS,GDOxB,OFsBmF,AEtB5E,CFsB4E;AAC7D,qBINX,CAAC,CAAA,gBJMa,IAAI,IAAI,GACP,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CACvB,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CACrB,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CACvB,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CACrB,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CACrB,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CACrB,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CACrB,OAAO,CAAC,0BAA0B,EAAE,UAAC,EAAE;AE7BpE,YAAI,CAAC,IEgBA,IFhBQ,GAAG,YAAM,EAAE,CAAA,QF6BiD,MAAM,GAAG,GAAG,CAAC,EAAE,CAAC;AIZrF,AFhBJ,YAAI,MAAM,EEgBF,CFhBK,CACT,EEeQ,CAAC,CAAC,CAAC,MAAM,GAAG,CJYiE,AIZhE,CJYiE,CAC7D,AIZrB,IFhBS,CEgBJ,CAAC,CJYsB,AIZrB,CJYsB,EIZnB,AFhBK,EAAE,EEgBH,CAAC,CAAC,CAAC,CFhBM,EEgBH,AFhBK,CEgBJ,IFhBS,EACrB,IF2B2C,AIZ9B,CAAC,AFfT,CF2B2C,CE3BzC,OAAO,EF2BmC,AE3BjC,EF2BmC,GE3B9B,EAAE,OAAO,EAC9B,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAC1B,QAAQ,EAAE,QAAQ,CAAE,EACjC,sBAAa,OAAO,CAAE,EACtB,qBAAa,MAAM,CAAE,EACrB,qBAAa,MAAM,CAAE,CACxB,CAAA;AACD,cAAM,CAAC,OAAO,CAAC,IEQqB,MFRpB,KAAK,EEQ4B,AFRvB,CEQwB,CAAC,CAAC,IJYqB,KAAK,GAAI,GAAG,CAAC,EAAE,CAAC;AEnBrF,gBAAI,CEO4C,CAAC,CAAA,EFPxC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IFmBgE,CAAC,CAC7D,GEpBK,CAAA,GFoBE,CAAC,kBAAkB,EAAU,UAAC,EAAE;AIZhE,AFPA,iBAAK,CAAC,KEOC,AFPI,CAAC,CAAC,CAAC,CAAC,CHclB,AKPe,CAAA,GLOX,EAAE,AGdmB,CAAC,KHcd,EAAE,GGda,EFmB6C,CDLpD,EAAE,CGdW,EFmB6C,AEnBxC,GFmB2C,GAAG,CAAC,EAAE,CAAC;ADJzF,AGdQ,aEOP,CAAA,ELOG,MGdS,GHcA,CAAC,IGdO,CAAC,CHcF,KAAK,ACIgE,CDJ/D,ACIgE,CAC7D,CDJzB,AGf2B,CAAC,KFmBI,CDJzB,ACI0B,AEnBC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CFmBA,AEnBA,EFmBU,UAAC,EAAE;ADH5D,AKRR,aFPK,CAAC,CAAA,CEOF,CAAC,GLQO,CKRH,CLQO,AKRN,GAAG,CLQO,AKRN,CLQO,CAAC,CAAC,CAAC,AKRN,CAAC,EACf,MAAM,IAAI,IJU2D,CIVtD,CAAC,GJU0D,GAAI,GAAG,CAAC,EAAE,CAAC,gBIVxC,CAAC,CAAA;ALQ1C,AKPR,SFRC,CAAC,CAAA,QEQK,GLOO,CKPH,CLOK,AKPJ,ILOQ,CAAC,CAAC,CAAC,CAAC,CKPH,CAAC,EAAE,CJSiE,CAAC,EIT9D,CJUJ,CIVM,GJUF,CAAA,SIVe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;ALQ5C,ACGY,AElBpB,SEQH,MFRU,IAAI,CAAA,EHeG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UCGC;AAAA,AACT,KElBnB,QHeQ,CAAA,KACA,IAAI,SAAS,CAAC,ICEE,EDFI,IAAI,CAAC,CCED,CDFG;AAC5B,ACEgB,oBDFZ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAM,CAAC,CAAA,GCEF,KAAK,YAAY,MAAM,EACvB,GAAG,IAAI,KAAK,CAAC,MAAM,CAAA,KAEnB,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;ADJhD,ACKgB,iBE1CtB,GHqCU,CAAC,CAAC,CAAC,CAAC,AGrCP,GHqCU,MAAM,IAAI,CAAC,CAAA,GCKD;ADJrB,ACIqB,AACT,oBDLR,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,CAAA;AACtB,ACKgB,uBDLT,IAAI,CAAA,MGnBR,KFwBgB,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;AAC5B,AExBpB,aHmBC,MAEG,MAAM,IAAI,KAAK,CAAC,CKbJ,IAAI,CFRF,CFwBO,AIhBH,IAAI,EAAE,qBLa0B,CAAC,CAAA;ACG9B,AIfzB,SLaH,AGrBA,OEQS,aJgBO,EIhBQ,GAAG,SAAlB,eAAe,CAAI,KAAK,EAAK;AAC/B,oBAAI,IAAI,CJgBH,CAAC,CAAA,AIhBK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;AJiB3B,AIhBJ,oBAAI,CAAC,GAAG,CAAC,EJgBF,GIhBO,CJgBH,AIhBI,CAAC,CAAC,CAAC,CJgBH,CAAA,AIhBK,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AACzC,oBAAI,QAAO,GFVX,EEUgB,CAAC,CAAC,CFVb,EAAE,GEUgB,QAAQ,EAAE;AAC7B,AFVR,iBFyBK,AEzBA,IAAI,KEUK,CAAC,AFVA,IEUI,AFVA,CEUC,IFVI,CEUC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AJgB1C,AIfQ,AFVR,mBFyBG,CEzBC,GFyBG,EEzBE,CFyBC,AEzBA,EEUE,CJeC,IAAI,AIfA,CJeC,CAAC,CAAC,AIfA,CJeC,GAAG,AEzBA,CEUC,AFVA,CEUC,CJeC,AIfA,CAAC,EJeE,CIfC,AFVA,CEUC,AFVA,CEUA,CJeE,AExB9B,CFwB+B,CAAC,CAAC,CAAC,AExB9B,CAAC,EFwBgC,KAAK,CAAA,AExB7B,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAA;AEU3C,aJeX,AEzBsD,AACvD,EFwBG,KExBI,IAAI,CFwBE,AExBF,CFwBG,CAAA,GDLJ,SKViB,KAAK,yCAAL,KAAK;AJgBhC,AIfgB,SFTnB,UFwBU,GAAG,CAAA,UIfW,SAAS,CAAC;AACf,SJenB,wBIfwB,QAAQ,CAAC;AACd,iCAAK,QAAQ,KLOzB,IAAI;AAAJ,AKNgB,oBLMZ,WGjBJ,IAAI,CEWgB,CAAC,AFXf,GEWkB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;AACpB,AFXpB,WFrCa,QAAQ,AEqCd,AAAC,IAAI,IAAI,CAAC,QAAQ,EEWA,AFXE,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AEWpB,AACT,SFXnB;AHgBG,gBAAO,IAAI,CAAC,MAAM,KAAK,CAAC,IACjB,QAAO,IAAI,CAAC,CAAC,CAAC,MAAK,QAAQ,EAAE;AAChC,AKLgB,kBJnDP,IDwDH,CAAC,GCxDU,CDwDN,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,AKLA,CLKC,AKLA,GAAG,CAAC,GLKG,AKLA,CLKC,CKLC,IAAI,CAAC,ILKL,CKLU,CAAC,CLKR,EAAK,CKLO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;ALM5D,AKLY,0BLKP,CAAC,CAAC,AGlBd,GHkBiB,CAAC,AGlBd,EAAE,CHkBe,GKLG,CLKC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AKLT,AFZzB,iBHkBK,CAAC,CAAA,AGjBC,MEYM,EFZC,IAAI,yCAAJ,IAAI,OAAK,QAAQ,IACxB,IAAI,YAAY,IAAI,CAAC,QAAQ,IAC7B,OAAO,IAAI,CAAC,IAAI,KAAK,SAAS,IAC9B,IAAI,CAAC,IAAI,KAAK,IAAI,CACxB;SACJ,IHaI,MACI,EKNI,CAAC,CLMD,AKNC,ILMG,CAAC,MAAM,KAAK,CAAC,EACtB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA,KAEzB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;AACvD,iBKTK,ELSE,IAAI,CAAA;AKRP,SLSP,WKTW,QAAO,KAAK,CAAC,CAAC,MAAK,QAAQ,IAAI,KAAK,CAAC,CAAC,YAAY,KAAK,EACvD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC;2BAAK,OFV7B,IAAI,EAAE,EEUsC,CAAC,CAAC,CAAC;AFTtD,iBESsD,CAAC,CAAC,AFTjD,CESiD,uBFTnC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AEUtC,SFTP,cESc,IAAI,CAAA;aACd,CAAA;AACD,gBAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AAC1B,gBAAI,QAAO,GAAG,KLOF,IGlBH,IAAI,EAAE,0BEWJ,GAAG,OAAK,QAAQ,IAAI,QAAO,GAAG,CAAC,IAAI,MAAK,QAAQ,EACvD,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAA;AAC3D,AFZA,mBEYO,AFZA,eEYe,CAAC,GAAG,CAAC,IAAI,AFZV,CEYW,CAAA,SFZA,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SEa/C,AFZA;AHiBG,gBAAO,UAAK,MAAM,KAAK,CAAC,IACjB,QAAO,UAAK,CAAC,CAAC,MAAK,QAAQ,IAC3B,UAAK,CAAC,CAAC,YAAY,KAAK,EAAK;AAChC,0BAAK,CAAC,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AACrB,WKzEK,AFOf,OAAO,MEPqB,GLyEX,OAAK,CAAC,CAAC,GAAG,CAAC,CAAA;iBACrB,CAAC,CAAA;aACL,MACI,IAAI,UAAK,MAAM,KAAK,CAAC,EACtB,OAAO,IAAI,CAAC,CAAC,CAAC,UAAK,CAAC,CAAC,CAAC,CAAA,KAEtB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAA;AACzD,kBKhFa,CLgFN,IAAI,CAAA,OKhFe;SLiF7B;;AGxBL,MAAM,CAAC,OAAO,GAAG,OAAO,CAAA;;;;4BH2Bf,GAAG,EAAE;AACN,gBAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EACtB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;AACvD,gBAAI,OAAO,GAAG,KAAK,QAAQ,EACvB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAA;AAChD,mBAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;SACrB;;;;;;gCAGQ;AACL,mBAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SAC7B;;;;;;8BAGM;AACH,gBAAI,IAAI,CAAC,CAAC,KAAK,IAAI,EACf,OAAO,CAAC,CAAA;AACZ,gBAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;AAChC,gBAAI,GAAG,GAAG,CAAC,EACP,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAA;AAC9E,mBAAO,GAAG,CAAA;SACb;;;;;;4BAGI,GAAG,EAAW;;;+CAAN,IAAI;AAAJ,oBAAI;;;AACb,gBAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EACjB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;AACvD,gBAAI,GAAG,GAAG,CAAC,EACP,GAAG,GAAG,AAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,GAAI,GAAG,CAAA;AACnC,gBAAI,EAAE,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA,AAAC,EACnC,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAA;AAC5C,gBAAI,IAAI,GAAG,SAAP,IAAI,CAAI,IAAI,EAAK;AACjB,oBAAI,CAAC,OAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EACnB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAA;AACrD,uBAAK,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;AAC7B,oBAAI,CAAC,CAAC,SAAO,CAAA;aAChB,CAAA;AACD,gBAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AAClB,oBAAI,QAAO,GAAG,yCAAH,GAAG,OAAK,QAAQ,IAAI,GAAG,YAAY,KAAK,EAC/C,GAAG,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AAAE,wBAAI,CAAC,GAAG,CAAC,CAAA;iBAAE,CAAC,CAAA,KAClC,IAAI,GAAG,KAAK,IAAI,EACjB,IAAI,CAAC,GAAG,CAAC,CAAA;aAChB,CAAC,CAAA;AACF,mBAAO,IAAI,CAAA;SACd;;;;;;8BAGa;;;+CAAN,IAAI;AAAJ,oBAAI;;;AACR,gBAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EACjB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;AACvD,gBAAI,IAAI,GAAG,SAAP,IAAI,CAAI,IAAI,EAAK;AACjB,oBAAI,CAAC,OAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EACnB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAA;AACrD,uBAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACjB,oBAAI,CAAC,CAAC,SAAO,CAAA;aAChB,CAAA;AACD,gBAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AAClB,oBAAI,QAAO,GAAG,yCAAH,GAAG,OAAK,QAAQ,IAAI,GAAG,YAAY,KAAK,EAC/C,GAAG,CAAC,OAAO,CAAC,UAAC,GAAG,EAAK;AAAE,wBAAI,CAAC,GAAG,CAAC,CAAA;iBAAE,CAAC,CAAA,KAClC,IAAI,GAAG,KAAK,IAAI,EACjB,IAAI,CAAC,GAAG,CAAC,CAAA;aAChB,CAAC,CAAA;AACF,mBAAO,IAAI,CAAA;SACd;;;;;;8BAGa;;;+CAAN,IAAI;AAAJ,oBAAI;;;AACR,gBAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EACjB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAA;AACtD,gBAAI,CAAC,OAAO,CAAC,UAAC,IAAI,EAAK;AACnB,oBAAI,CAAC,OAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EACnB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAA;AACrD,oBAAI,KAAK,GAAG,KAAK,CAAA;AACjB,qBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAK,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,wBAAI,OAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AACpB,+BAAK,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACnB,4BAAI,CAAC,CAAC,GAAG,IAAI,CAAA;AACb,6BAAK,GAAG,IAAI,CAAA;AACZ,8BAAK;qBACR;iBACJ;AACD,oBAAI,CAAC,KAAK,EACN,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;aAC3D,CAAC,CAAA;AACF,mBAAO,IAAI,CAAA;SACd;;;;;;iCAGS;AACN,mBAAO,IAAI,CAAC,CAAC,CAAA;SAChB;;;;;;iCAGS;AACN,mBAAO,IAAI,CAAC,CAAC,CAAA;SAChB;;;;;;oCAGY;AACT,mBAAO,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;SAC5C;;;WAxLgB,QAAQ;;;kBAAR,QAAQ","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (ctx, T, A, C) {\n        if (arguments.length < 2)\n            throw new Error(\"init: invalid number of arguments\")\n        this.ctx = ctx\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (line, column, offset) {\n        if (arguments.length === 0)\n            return {\n                line:   this.L.L,\n                column: this.L.C,\n                offset: this.L.O\n            }\n        else if (arguments.length <= 3) {\n            this.L.L = line   || 0\n            this.L.C = column || 0\n            this.L.O = offset || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set (...args) {\n        if (   args.length === 1\n            && typeof args[0] === \"object\") {\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (args.length === 2)\n            this.A[args[0]] = args[1]\n        else\n            throw new Error(\"set: invalid number of arguments\")\n        return this\n    }\n\n    /*  unset AST node attributes  */\n    unset (...args) {\n        if (   args.length === 1\n            && typeof args[0] === \"object\"\n            && args[0] instanceof Array   ) {\n            args[0].forEach((key) => {\n                delete this.A[key]\n            })\n        }\n        else if (args.length === 1)\n            delete this.A[args[0]]\n        else\n            throw new Error(\"unset: invalid number of arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid key argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  return current sibling position  */\n    nth () {\n        if (this.P === null)\n            return 1\n        let idx = this.P.C.indexOf(this)\n        if (idx < 0)\n            throw new Error(\"nth: internal error -- node not in childs of its parent\")\n        return idx\n    }\n\n    /*  insert child AST node(s)  */\n    ins (pos, ...args) {\n        if (args.length === 0)\n            throw new Error(\"ins: invalid number of arguments\")\n        if (pos < 0)\n            pos = (this.C.length + 1) - pos\n        if (!(0 <= pos && pos <= this.C.length))\n            throw new Error(\"ins: invalid position\")\n        let _ins = (node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(\"ins: invalid AST node argument\")\n            this.C.splice(pos++, 0, node)\n            node.P = this\n        }\n        args.forEach((arg) => {\n            if (typeof arg === \"object\" && arg instanceof Array)\n                arg.forEach((arg) => { _ins(arg) })\n            else if (arg !== null)\n                _ins(arg)\n        })\n        return this\n    }\n\n    /*  add child AST node(s)  */\n    add (...args) {\n        if (args.length === 0)\n            throw new Error(\"add: invalid number of arguments\")\n        let _add = (node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(\"add: invalid AST node argument\")\n            this.C.push(node)\n            node.P = this\n        }\n        args.forEach((arg) => {\n            if (typeof arg === \"object\" && arg instanceof Array)\n                arg.forEach((arg) => { _add(arg) })\n            else if (arg !== null)\n                _add(arg)\n        })\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del (...args) {\n        if (args.length === 0)\n            throw new Error(\"del: invalid number of argument\")\n        args.forEach((node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(\"del: invalid AST node argument\")\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === node) {\n                    this.C.splice(j, 1)\n                    node.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: AST node not found in childs\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n\n    /*  serialize AST node recursively  */\n    serialize () {\n        return this.ctx.serialize(this.ctx, this)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                            out += value.toString()\n                            break\n                        case \"string\":\n                            let hex = (ch) => ch.charCodeAt(0).toString(16).toUpperCase()\n                            out += \"\\\"\" +\n                                value.replace(/\\\\/g, \"\\\\\\\\\")\n                                    .replace(/\"/g, \"\\\\\\\"\")\n                                    .replace(/\\x08/g, \"\\\\b\")\n                                    .replace(/\\t/g, \"\\\\t\")\n                                    .replace(/\\n/g, \"\\\\n\")\n                                    .replace(/\\f/g, \"\\\\f\")\n                                    .replace(/\\r/g, \"\\\\r\")\n                                    .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n                                    .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    (ch) => \"\\\\x\"  + hex(ch))\n                                    .replace(/[\\u0100-\\u0FFF]/g,         (ch) => \"\\\\u0\" + hex(ch))\n                                    .replace(/[\\u1000-\\uFFFF]/g,         (ch) => \"\\\\u\"  + hex(ch)) +\n                                \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += value.source\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when = \"downward\") {\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase      from \"./asty-base.js\"\nimport ASTYMerge     from \"./asty-merge.js\"\nimport ASTYWalk      from \"./asty-walk.js\"\nimport ASTYDump      from \"./asty-dump.js\"\nimport ASTYSerialize from \"./asty-serialize.js\"\nimport ASTYVersion   from \"./asty-version.js\"\n\nclass ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\",\n                         \"set\", \"unset\", \"get\", \"attrs\",\n                         \"nth\", \"ins\", \"add\", \"del\",\n                         \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(this, type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n    serialize (node) {\n        return ASTYSerialize.serialize(this, node)\n    }\n    unserialize (json) {\n        return ASTYSerialize.unserialize(this, json)\n    }\n}\n\n/*  export the traditional way for interoperability reasons\n    (as Babel would export an object with a 'default' field)  */\nmodule.exports = ASTYCtx\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos = false, attrMap = {}) {\n        if (!this.ctx.isA(node))\n            throw new Error(\"merge: invalid AST node argument\")\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYSerialize {\n    /*  recursively serialize AST nodes into JSON string  */\n    static serialize (asty, node) {\n        const serializeNode = (node) => {\n            let clone = {\n                T: node.T,\n                L: { L: node.L.L, C: node.L.C, O: node.L.O }\n            }\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                clone.A = {}\n                keys.forEach((key) => {\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            clone.A[key] = value\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            clone.A[key] = JSON.parse(JSON.stringify(value))\n                            break\n                    }\n                })\n            }\n            if (node.C.length > 0)\n                clone.C = node.C.map((C) => serializeNode(C))\n            return clone\n        }\n        if (!asty.isA(node))\n            throw new Error(\"serialize: not an ASTy node\")\n        return JSON.stringify({ ASTy: serializeNode(node) })\n    }\n\n    /*  recursively unserialize JSON string into AST nodes  */\n    static unserialize (asty, json) {\n        const unserializeNode = (clone) => {\n            let node = asty.create(clone.T)\n            node.pos(clone.L.L, clone.L.C, clone.L.O)\n            if (typeof clone.A === \"object\") {\n                Object.keys(clone.A).forEach((key) => {\n                    let value = clone.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            node.set(key, value)\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            node.set(key, JSON.parse(JSON.stringify(value)))\n                            break\n                    }\n                })\n            }\n            if (typeof clone.C === \"object\" && clone.C instanceof Array)\n                node.add(clone.C.map((C) => unserializeNode(C)))\n            return node\n        }\n        let obj = JSON.parse(json)\n        if (typeof obj !== \"object\" || typeof obj.ASTy !== \"object\")\n            throw new Error(\"unserialize: not an ASTy JSON export\")\n        return unserializeNode(obj.ASTy)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 4: false */\n/* global 1: false */\n/* global 20151229:  false */\n\nconst version = {\n    major: 1,\n    minor: 4,\n    micro: 1,\n    date:  20151229\n}\n\nexport default version\n\n"]}