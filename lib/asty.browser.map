{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-dump.js","src/asty-serialize.js","src/asty-version.js","src/asty-walk.js","src/asty-merge.js","src/asty.js"],"names":["ASTYBase","ctx","T","A","C","arguments","length","Error","this","ASTy","L","O","P","_typeof","name","hasOwnProperty","set","Array","add","line","column","offset","args","_len","_key","Object","keys","forEach","key","_this","_len2","_key2","_this2","idx","indexOf","pos","_len3","_key3","_ins","node","_this3","isA","splice","arg","_len4","_key4","_add","_this4","push","_len5","_key5","_this5","found","j","serialize","ASTYDump","maxDepth","undefined","Infinity","out","walk","depth","i","first","value","hex","ch","charCodeAt","toString","toUpperCase","replace","RegExp","source","JSON","stringify","ASTYSerialize","asty","serializeNode","clone","parse","map","json","unserializeNode","create","obj","version","major","minor","micro","date","ASTYWalk","cb","when","_walk","parent","call","child","ASTYMerge","takePos","attrMap","attrs","attrSource","attrTarget","get","childs","ASTYCtx","ASTYNode","mixins","_astyBase2","_astyMerge2","_astyWalk2","_astyDump2","mixin","proto","prototype","slice","method","_astyVersion2","type","init","_astySerialize2","unserialize","module","exports"],"mappings":"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B,GACP,MAAOiF,iBAAAA,WAAclE,UAAU9C,KAAM+B,uCAE5B0C,GACT,MAAOuC,iBAAAA,WAAcC,YAAYjH,KAAMyE,OA5CzCwB,IAkDNiB,QAAOC,QAAUlB;;;;;;;;;;;;;;;;;;;;;;;;INzDI,QAAQ;aAAR,QAAQ;ICAR,AIAA,QJAQ,CIAC,iBLAT,QAAQ;aCAR,AIAA,QJAQ,CIAC;8BJAT,AIAA,QJAQ,CIAC;iBLAT,QAAQ;AGK7B,IDLqB,ACKf,OAAO,GAAG,GDLkB;ACM9B,SAAK,EAAE,CAAC,CDNS,IDAA,AIAA,QJAQ,CIAC,AHAI;ACO9B,ICPiB,KDOZ,EAAE,CAAC,ACPiB,kBFAR,aAAa;ACQ9B,SAAK,EAAE,CAAC,CCRS,QAAQ,QJEnB,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAChB,AGMJ,QAAI,EAAG,MHNC,EGMO,OHNE,CAAC,IIHD,EJGO,GAAG,CAAC,EACpB,AIJiB,MJIX,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;AACxD,CGKP,CAAA,cHLW,CAAC,AELQ,GFKL,GAAG,GAAG,CAAA,ECHZ,CIAC,AHFuB,IGEnB,EAAiC,CJA9B,EAAE;ADIZ,ACHA,gBDGI,ACHA,CDGC,IAAI,GAAG,ACHA,IDGI,CAAA,ACHC,SAAS,EACtB,QAAQ,GAAG,QAAQ,CAAA;ADGvB,ACFA,gBDEI,ACFA,CDEC,AIPQ,CJOP,AGKC,CFPA,EDEE,CAAC,ACFA,CDEA,CCFE,CAAA,AEOE,ACZO;AJQrB,ACFA,gBDEI,ACFA,AIJK,CLMJ,ACFA,CDEC,GAAG,ACFA,CAAC,CDEC,AKNK,CLMJ,EAAE,CAAC,EAAE,CAAC,EAAE,ACFT,CDEU,EAAE,CAAC,ACFT,EDEW,ACFT,CDEU,EAAE,CAAA,qBCFP,EAAyB,eIJ5B,KAAK;ALOxB,ACFI,gBDEA,AKPsB,CLOrB,CAAC,ECFE,CDEC,EAAE,AKPsB,CLOtB,CCFE,GAAG,MCLF,EDKU,EAChB,ACNU,EAAE,IAAI,CDMV,CCNY,kCGAU,EAAE;ALQtC,ACDI,ACNJ,gBFOI,AEPE,CFOD,CAAC,GAAG,ACDA,EDCE,CAAA,CCDE,CAAC,GAAG,ACNE,CDMD,EAAE,ACNE,CDMD,GAAG,KAAK,ACNvB,EDMyB,CAAC,EAAE,QCNf,CAAI,IAAI,EAAK;AFQhC,ACDQ,AIPR,AHCI,gBFOA,AKRA,CLQC,AKRA,CLQC,EEPE,CFOC,AKRA,CAAC,CJOC,EDCE,AKRA,AHCA,CFOA,AKRC,CJOC,CCNC,CGDC,ADDf,CCCgB,CDDd,EHQiB,AGRI,CHQJ,AIPC,CAAC,EACnB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;ALQvD,AKPA,AHAQ,gBFOJ,AKPA,ADHE,CHQe,AACjB,GAAG,AGTG,CFGD,EGAE,AHAA,CFOA,ACDA,CDCC,AKPC,EHAE,CDMA,ACNC,CDMA,ACNC,CDMA,GAAG,GAAG,CAAA,6BDCZ,CAAC,OAAK,GIVJ,KJUY,EAAE,GIVJ;AJWnB,ACDA,AINA,AHAI,oBDMA,AINA,CLOC,AEPA,EGAE,AHAA,CDMC,CDCC,AEPA,CGAC,AHAA,CDMC,CCNC,CFOC,CKPC,CAAC,CHAC,CFOC,ACDA,ACNA,CFOC,ACDA,AINA,AHAA,CAAC,CGAC,AHAA,CGAA,CJME,ACNA,CDMC,ACNA,EAAE,EDME,CAAC,CAAC,ACNA,CDMC,ACNA,CDMA,ACNC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;AFQ5C,ACDJ,AINA,ADJJ,gBAAI,CFIC,CAAA,EDMG,AINA,CAAC,ADJA,GJWG,ACDA,AINA,ADJA,CJWC,ACDA,AINA,CLOC,EKPE,CAAC,CAAC,CJMC,CINC,CDJhB,CHUkB,CAAC,AINA,CAAC,CJMC,AINA,CDJhB,CCIkB,ADJd,CJWe,CAAC,CKPC,CAAC,ADJd,CCIe,CLOC,AKPA,ADJd,CJWe,AKPD,ELQrB,EIZY,EJYR,AIZU,CJYT,GAAG,CAAC,CIZW,EAAK,CJYZ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;AEP/B,AEJA,aCIH,ILOkC,GEP3B,AEJA,IFII,AEJA,GFIG,EEJE,IFII,CAAC,IAAI,CAAC,AEJA,IFII,AEJA,CFIC,CAAC,CAAC,CAAA,AEJC,KAAK,MAAM,EACtC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;AHS9C,AILR,AHAI,AEHA,aJUH,GKPG,CAAC,GHAG,AEHA,CAAC,CCGC,ADHA,CAAC,CCGC,AHAA,CGAC,AHAA,EDKF,GGRO,CHQH,ACLI,AEHA,CCGC,CAAC,CJKH,ACLI,CDKJ,ACLK,EAAE,IEHL,ECGE,GDHG,EAAK,KCGE,EAAK;ALQrC,ACFQ,AILJ,AHAI,AEHA,gBJUJ,IKPI,ILOG,CAAC,AEPC,AEHA,CFGC,AEHA,CFGC,CDKH,EILM,AHAA,CEHC,CFGC,CDKH,AIJP,AHDU,AEHC,GHQD,EGRM,EHQF,AIJP,CJIO,AGRK,CAAC,EAAE,GCIR,CAAC,ADJW,CAAC,CAAA,QCIF,CAAC,KAAK,ELM9B,CAAC,OAAK,CKNmC,GAC1C,ILKe,GKLR,CLKY,AKLX,CLKY,SKLF,CAAC,ELKa,CKJhC,ILIqC,EAC3C,IAAI,AKLY,AACf,CLII,AKJJ,GLIO,CAAC,CAAC,CAAC,CAAA;AACf,ACHQ,AIDJ,AHJI,iBEHH,CAAC,CJWC,AIXD,CCOE,GLIG,CAAA,AERC,CAAC,GDKD,CAAC,CIDK,EHJE,CAAC,EGIE,CJCH,CAAC,EIDM,EACnB,EHLc,GAAG,CDKH,AIAT,CHLiB,EDKL,AIAT,CAAC,CJAa,SIAH,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAA;AJCtC,ACLA,AEHR,SJWP,IKHI,CAAC,CAAA,KDRM,IAAI,IFGI,CEHC,GHQD,CAAC,ACLI,GAAG,CEHC,CHQH,EACN,ACNY,CAAC,AEHA,CFGC,CDMX,ACNY,EEHE,CFGC,CDMX,ACNY,CAAA,EEHG,CHSX,CAAA,IGTiB,CHW5B,CGVR,EAAE,CAAC,CHUU,GAAG,AGVT,CAAC,IHUa,AGVT,CHUS,CGVP,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;AHWxC,AIHZ,AHLY,aEFX,CAAA,ECOG,CAAC,MAAM,EAAE,CAAC,KJGC,EIHM,CAAC,CJGH,GAAG,CCRK,EDQF,GIHF,AHLS,CDQH,CAAA,GIHD,EAAK,kCHLN,KAAK;ADSpB,AIHR,AHLY,AEFhB,iBAAK,CAAC,ICOG,ADP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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (ctx, T, A, C) {\n        if (arguments.length < 2)\n            throw new Error(\"init: invalid number of arguments\")\n        this.ctx = ctx\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (line, column, offset) {\n        if (arguments.length === 0)\n            return {\n                line:   this.L.L,\n                column: this.L.C,\n                offset: this.L.O\n            }\n        else if (arguments.length <= 3) {\n            this.L.L = line   || 0\n            this.L.C = column || 0\n            this.L.O = offset || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set (...args) {\n        if (   args.length === 1\n            && typeof args[0] === \"object\") {\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (args.length === 2)\n            this.A[args[0]] = args[1]\n        else\n            throw new Error(\"set: invalid number of arguments\")\n        return this\n    }\n\n    /*  unset AST node attributes  */\n    unset (...args) {\n        if (   args.length === 1\n            && typeof args[0] === \"object\"\n            && args[0] instanceof Array   ) {\n            args[0].forEach((key) => {\n                delete this.A[key]\n            })\n        }\n        else if (args.length === 1)\n            delete this.A[args[0]]\n        else\n            throw new Error(\"unset: invalid number of arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid key argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  return current sibling position  */\n    nth () {\n        if (this.P === null)\n            return 1\n        let idx = this.P.C.indexOf(this)\n        if (idx < 0)\n            throw new Error(\"nth: internal error -- node not in childs of its parent\")\n        return idx\n    }\n\n    /*  insert child AST node(s)  */\n    ins (pos, ...args) {\n        if (args.length === 0)\n            throw new Error(\"ins: invalid number of arguments\")\n        if (pos < 0)\n            pos = (this.C.length + 1) - pos\n        if (!(0 <= pos && pos <= this.C.length))\n            throw new Error(\"ins: invalid position\")\n        let _ins = (node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(\"ins: invalid AST node argument\")\n            this.C.splice(pos++, 0, node)\n            node.P = this\n        }\n        args.forEach((arg) => {\n            if (typeof arg === \"object\" && arg instanceof Array)\n                arg.forEach((arg) => { _ins(arg) })\n            else if (arg !== null)\n                _ins(arg)\n        })\n        return this\n    }\n\n    /*  add child AST node(s)  */\n    add (...args) {\n        if (args.length === 0)\n            throw new Error(\"add: invalid number of arguments\")\n        let _add = (node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(\"add: invalid AST node argument\")\n            this.C.push(node)\n            node.P = this\n        }\n        args.forEach((arg) => {\n            if (typeof arg === \"object\" && arg instanceof Array)\n                arg.forEach((arg) => { _add(arg) })\n            else if (arg !== null)\n                _add(arg)\n        })\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del (...args) {\n        if (args.length === 0)\n            throw new Error(\"del: invalid number of argument\")\n        args.forEach((node) => {\n            if (!this.ctx.isA(node))\n                throw new Error(\"del: invalid AST node argument\")\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === node) {\n                    this.C.splice(j, 1)\n                    node.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: AST node not found in childs\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n\n    /*  serialize AST node recursively  */\n    serialize () {\n        return this.ctx.serialize(this.ctx, this)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"string\":\n                            let hex = (ch) => ch.charCodeAt(0).toString(16).toUpperCase()\n                            out += \"\\\"\" +\n                                value.replace(/\\\\/g, \"\\\\\\\\\")\n                                    .replace(/\"/g, \"\\\\\\\"\")\n                                    .replace(/\\x08/g, \"\\\\b\")\n                                    .replace(/\\t/g, \"\\\\t\")\n                                    .replace(/\\n/g, \"\\\\n\")\n                                    .replace(/\\f/g, \"\\\\f\")\n                                    .replace(/\\r/g, \"\\\\r\")\n                                    .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n                                    .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    (ch) => \"\\\\x\"  + hex(ch))\n                                    .replace(/[\\u0100-\\u0FFF]/g,         (ch) => \"\\\\u0\" + hex(ch))\n                                    .replace(/[\\u1000-\\uFFFF]/g,         (ch) => \"\\\\u\"  + hex(ch)) +\n                                \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += value.source\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYSerialize {\n    /*  recursively serialize AST nodes into JSON string  */\n    static serialize (asty, node) {\n        const serializeNode = (node) => {\n            let clone = {\n                T: node.T,\n                L: { L: node.L.L, C: node.L.C, O: node.L.O }\n            }\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                clone.A = {}\n                keys.forEach((key) => {\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            clone.A[key] = value\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            clone.A[key] = JSON.parse(JSON.stringify(value))\n                            break\n                    }\n                })\n            }\n            if (node.C.length > 0)\n                clone.C = node.C.map((C) => serializeNode(C))\n            return clone\n        }\n        if (!asty.isA(node))\n            throw new Error(\"serialize: not an ASTy node\")\n        return JSON.stringify({ ASTy: serializeNode(node) })\n    }\n\n    /*  recursively unserialize JSON string into AST nodes  */\n    static unserialize (asty, json) {\n        const unserializeNode = (clone) => {\n            let node = asty.create(clone.T)\n            node.pos(clone.L.L, clone.L.C, clone.L.O)\n            if (typeof clone.A === \"object\") {\n                Object.keys(clone.A).forEach((key) => {\n                    let value = clone.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            node.set(key, value)\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            node.set(key, JSON.parse(JSON.stringify(value)))\n                            break\n                    }\n                })\n            }\n            if (typeof clone.C === \"object\" && clone.C instanceof Array)\n                node.add(clone.C.map((C) => unserializeNode(C)))\n            return node\n        }\n        let obj = JSON.parse(json)\n        if (typeof obj !== \"object\" || typeof obj.ASTy !== \"object\")\n            throw new Error(\"unserialize: not an ASTy JSON export\")\n        return unserializeNode(obj.ASTy)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 4: false */\n/* global 0: false */\n/* global 20151212:  false */\n\nconst version = {\n    major: 1,\n    minor: 4,\n    micro: 0,\n    date:  20151212\n}\n\nexport default version\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when = \"downward\") {\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos = false, attrMap = {}) {\n        if (!this.ctx.isA(node))\n            throw new Error(\"merge: invalid AST node argument\")\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase      from \"./asty-base.js\"\nimport ASTYMerge     from \"./asty-merge.js\"\nimport ASTYWalk      from \"./asty-walk.js\"\nimport ASTYDump      from \"./asty-dump.js\"\nimport ASTYSerialize from \"./asty-serialize.js\"\nimport ASTYVersion   from \"./asty-version.js\"\n\nclass ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\",\n                         \"set\", \"unset\", \"get\", \"attrs\",\n                         \"nth\", \"ins\", \"add\", \"del\",\n                         \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(this, type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n    serialize (node) {\n        return ASTYSerialize.serialize(this, node)\n    }\n    unserialize (json) {\n        return ASTYSerialize.unserialize(this, json)\n    }\n}\n\n/*  export the traditional way for interoperability reasons\n    (as Babel would export an object with a 'default' field)  */\nmodule.exports = ASTYCtx\n\n"]}