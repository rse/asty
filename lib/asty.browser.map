{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-dump.js","src/asty-version.js","src/asty-merge.js","src/asty-walk.js","src/asty.js"],"names":["ASTYBase","T","A","C","Error","this","ASTy","L","O","P","_name","hasOwnProperty","set","Array","add","arguments","length","args","_arguments","Object","keys","forEach","key","_this","_add","node","child","JSON","stringify","push","prototype","slice","call","arg","_this2","found","j","_this3","splice","ASTYDump","maxDepth","undefined","Infinity","out","walk","depth","i","first","value","hex","ch","charCodeAt","toString","toUpperCase","replace","RegExp","source","version","major","minor","micro","date","ASTYMerge","takePos","attrMap","pos","attrs","attrSource","attrTarget","get","childs","ASTYWalk","cb","when","_walk","parent","ASTYCtx","ASTYNode","mixins","_astyBaseJs2","_astyMergeJs2","_astyWalkJs2","_astyDumpJs2","mixin","proto","method","_astyVersionJs2","type","init"],"mappings":"AAAA;obCwBqBA,SAAQ,mBAARA,0BAAAA,uBAAAA,qBAEZ,SAACC,EAAGC,EAAGC,GACR,GAAiB,mBAANF,GACP,KAAM,IAAIG,OAAM,yBAOpB,IANAC,KAAKC,MAAO,EACZD,KAAKJ,EAAIA,EACTI,KAAKE,GAAMA,EAAG,EAAGJ,EAAG,EAAGK,EAAG,GAC1BH,KAAKH,KACLG,KAAKF,KACLE,KAAKI,EAAI,KACQ,gBAANP,GACP,IAAK,GAAIQ,KAAQR,GACTA,EAAES,eAAeD,IACjBL,KAAKO,IAAIF,EAAMR,EAAEQ,GAI7B,OAFiB,gBAANP,IAAkBA,YAAaU,QACtCR,KAAKS,IAAIX,GACNE,yBAIN,SAACJ,GACF,GAAyB,IAArBc,UAAUC,OACV,MAAOX,MAAKJ,CACX,IAAyB,IAArBc,UAAUC,OAEf,MADAX,MAAKJ,EAAIA,EACFI,IAGP,MAAM,IAAID,OAAM,wDAIpB,SAACG,EAAGJ,EAAGK,GACP,GAAyB,IAArBO,UAAUC,OACV,MAAOX,MAAKE,CACX,IAAIQ,UAAUC,QAAU,EAIzB,MAHAX,MAAKE,EAAEA,EAAIA,GAAK,EAChBF,KAAKE,EAAEJ,EAAIA,GAAK,EAChBE,KAAKE,EAAEC,EAAIA,GAAK,EACTH,IAGP,MAAM,IAAID,OAAM,uDAIpB,iCACA,IAAyB,IAArBW,UAAUC,QAAwC,gBAAjBD,WAAU,eAC3C,GAAIE,GAAIC,CACRC,QAAOC,KAAKH,EAAK,IAAII,QAAQ,SAACC,GAC1BC,EAAKrB,EAAEoB,GAAOL,EAAK,GAAGK,YAGzB,CAAA,GAAyB,IAArBP,UAAUC,OAGf,KAAM,IAAIZ,OAAM,yBAFhBC,MAAKH,EAAEa,UAAU,IAAMA,UAAU,GAGrC,MAAOV,yBAIP,SAACiB,GACD,GAAyB,IAArBP,UAAUC,OACV,KAAM,IAAIZ,OAAM,mCACpB,IAAmB,gBAARkB,GACP,KAAM,IAAIlB,OAAM,wBACpB,OAAOC,MAAKH,EAAEoB,wBAIZ,WACF,MAAOH,QAAOC,KAAKf,KAAKH,sBAIxB,qBACA,IAAyB,IAArBa,UAAUC,OACV,KAAM,IAAIZ,OAAM,2BACpB,IAAIoB,GAAO,SAACC,EAAMC,GACd,KAA0B,gBAAZA,IACY,gBAAZA,GAAMzB,GACM,gBAAZyB,GAAMnB,GACM,gBAAZmB,GAAMxB,GACM,gBAAZwB,GAAMjB,GACM,gBAAZiB,GAAMvB,GAAkBuB,EAAMvB,YAAaU,QACrD,KAAM,IAAIT,OAAK,0BAA4BuB,KAAKC,UAAUF,GAC9DD,GAAKtB,EAAE0B,KAAKH,GACZA,EAAMjB,EAAIgB,EAUd,OARkB,QAAdV,WACAF,MAAMiB,UAAUC,MAAMC,KAAKjB,UAAW,GAAGM,QAAQ,SAACY,GAC3B,gBAARA,IAAoBA,YAAepB,OAC1CoB,EAAIZ,QAAQ,SAACK,GAAYF,EAAIU,EAAOR,KACvB,OAARO,GACLT,EAAIU,EAAOD,KAGhB5B,wBAIP,qBACA,IAAyB,IAArBU,UAAUC,OACV,KAAM,IAAIZ,OAAM,wBAcpB,OAbAS,OAAMiB,UAAUC,MAAMC,KAAKjB,UAAW,GAAGM,QAAQ,SAACY,GAE9C,IAAK,GADDE,IAAQ,EACHC,EAAI,EAAGA,EAAIC,EAAKlC,EAAEa,OAAQoB,IAC/B,GAAIC,EAAKlC,EAAEiC,KAAOH,EAAK,CACnBI,EAAKlC,EAAEmC,OAAOF,EAAG,GACjBH,EAAIxB,EAAI,KACR0B,GAAQ,CACR,OAGR,IAAKA,EACD,KAAM,IAAI/B,OAAM,0BAEjBC,2BAIJ,WACH,MAAOA,MAAKF,wBAIT,WACH,MAAOE,MAAKI,MAjICT,wBAAAA;;obCAAuC,SAAQ,mBAARA,0BAAAA,uBAAAA,qBAEZ,SAACC,GACeC,SAAbD,IACAA,EAAWE,EAAAA,EACf,IAAIC,GAAM,EAkDV,OAjDAtC,MAAKuC,KAAK,SAACnB,EAAMoB,GACb,KAAIA,EAAQL,GAAZ,CAEA,IAAK,GAAIM,GAAI,EAAOD,EAAJC,EAAWA,IACvBH,GAAO,MAAMA,IACVlB,EAAKxB,EAAI,GAChB,IAAImB,GAAOD,OAAOC,KAAKK,EAAKvB,EACxBkB,GAAKJ,OAAS,eACd2B,GAAO,GACP,IAAII,IAAQ,CACZ3B,GAAKC,QAAQ,SAACC,GACLyB,EAGDA,GAAQ,EAFRJ,GAAO,KAGXA,GAAOrB,EAAM,IACb,IAAI0B,GAAQvB,EAAKvB,EAAEoB,EACnB,cAAe0B,IACX,IAAK,SACD,GAAIC,GAAM,SAACC,SAAOA,GAAGC,WAAW,GAAGC,SAAS,IAAIC,cAChDV,IAAO,IACHK,EAAMM,QAAQ,MAAO,QAChBA,QAAQ,KAAM,OACdA,QAAQ,QAAS,OACjBA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,2BAA4B,SAACJ,SAAO,OAASD,EAAIC,KACzDI,QAAQ,wBAA4B,SAACJ,SAAO,MAASD,EAAIC,KACzDI,QAAQ,mBAA4B,SAACJ,SAAO,OAASD,EAAIC,KACzDI,QAAQ,mBAA4B,SAACJ,SAAO,MAASD,EAAIC,KAC9D,GACJ,MACJ,KAAK,SAEGP,GADAK,YAAiBO,QACVP,EAAMQ,OAEN7B,KAAKC,UAAUoB,EAC1B,MACJ,SACIL,GAAOhB,KAAKC,UAAUoB,MAIlCL,GAAO,QAEXA,GAAO,IAAMlB,EAAKlB,EAAEA,EAAI,IAAMkB,EAAKlB,EAAEJ,EAAI,QAC1C,YACIwC,MAvDMJ,wBAAAA;;obEAAuB,UAAS,mBAATA,0BAAAA,uBAAAA,sBAEX,SAACrC,EAAMsC,EAASC,aAClB,IAAoB,gBAATvC,GACP,KAAM,IAAIrB,OAAM,mCAKpB,IAJuB,mBAAZ2D,KACPA,GAAU,GACS,mBAAZC,KACPA,MACAD,EAAS,CACT,GAAIE,GAAMxC,EAAKwC,KACf5D,MAAK4D,IAAIA,EAAI1D,EAAG0D,EAAI9D,EAAG8D,EAAIzD,GAc/B,MAZAiB,GAAKyC,QAAQ7C,QAAQ,SAAC8C,GAClB,GAAIC,GACiC,mBAAxBJ,GAAQG,GACfH,EAAQG,GACRA,CAEa,QAAfC,GACA7C,EAAKX,IAAIwD,EAAY3C,EAAK4C,IAAIF,MAEtC1C,EAAK6C,SAASjD,QAAQ,SAACK,GACnBH,EAAKT,IAAIY,KAENrB,SAzBMyD,wBAAAA;;mEDKrB,IAAML,UACFC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,KAAO,6BAGIJ;;obEZMc,SAAQ,mBAARA,0BAAAA,uBAAAA,qBAEZ,SAACC,EAAIC,GACc,mBAATA,KACPA,EAAO,WACX,IAAIC,GAAQ,QAARA,GAASjD,EAAMoB,EAAO8B,IACT,aAATF,GAAgC,SAATA,IACvBD,EAAGxC,KAAK,KAAMP,EAAMoB,EAAO8B,EAAQ,YACvClD,EAAKtB,EAAEkB,QAAQ,SAACK,GACZgD,EAAMhD,EAAOmB,EAAQ,EAAGpB,MAEf,WAATgD,GAA8B,SAATA,IACrBD,EAAGxC,KAAK,KAAMP,EAAMoB,EAAO8B,EAAQ,UAG3C,OADAD,GAAMrE,KAAM,EAAG,MACRA,SAfMkE,wBAAAA;;khBCAG,wFACA,0FACA,uFACA,0FACA,4EAEHK,QAAO,WACZ,QADKA,qCAAAA,GAEbvE,KAAKwE,SAAW,YAChB,IAAIC,KACAC,aAAA,WAAa,OAAQ,OAAQ,MAAO,MAAO,MAAO,QAAS,MAAO,MAAO,SAAU,WACnFC,cAAA,WAAa,UACbC,aAAA,WAAa,SACbC,aAAA,WAAa,QAQjB,OANAJ,GAAOzD,QAAQ,SAAC8D,GACZ,GAAIC,GAAQD,EAAM,GAAGrD,SACrBqD,GAAMpD,MAAM,GAAGV,QAAQ,SAACgE,GACpB9D,EAAKsD,SAAS/C,UAAUuD,GAAUD,EAAMC,OAGzChF,yBAfMuE,wBAiBT,WACJ,MAAAU,iBAAA,iCAEG,SAACH,GACJ,IAAK,GAAIE,KAAUF,GACXA,EAAMxE,eAAe0E,KACrBhF,KAAKwE,SAAS/C,UAAUuD,GAAUF,EAAME,GAAO,OAChDhF,4BAEJ,SAACkF,GACJ,OAAO,GAAKlF,MAAKwE,UAAYW,KAAKD,sBAElC,SAAC9D,GACD,MACuB,gBAATA,IACPA,YAAgBpB,MAAKwE,UACA,iBAAdpD,GAAKnB,MACZmB,EAAKnB,QAAS,MAlCRsE,wBAAAA;;;;;;;;;;;;;;;;;;;;;;;;ILNA,QAAQ;aAAR,QAAQ;ICAR,QAAQ,kBDAR,QAAQ;aCAR,QAAQ;IEAR,SAAS,iBFAT,QAAQ;aEAR,IHAA,KGAS,GHAD;AEK7B,IAAM,OAAO,GAAG,gBCLK,SAAS;ADM1B,SAAK,EAAE,CAAC,KDNS,QAAQ;ACOzB,IEPiB,KFOZ,EAAE,CAAC,AEPiB;AFQzB,SAAK,EAAE,CAAC,CERS,EJEZ,EGFY,ICAQ,KDAC,GHEpB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACX,AEMJ,QAAI,EAAG,MFNC,EEMO,KFNA,CAAC,KAAK,CIHJ,QAAQ,EJGO,EACxB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;AAC7C,CEKP,CAAA,aDRQ,CDGG,CAAC,IAAI,GAAG,IAAI,CAAA,ACHd,QAAQ,EAAE;ADIZ,ACHA,gBDGI,ACHA,CDGC,CAAC,GAAG,CAAC,CAAA,CCHE,EIHI,GJGC,SAAS,EACtB,EIJ4B,MJIpB,GAAG,QAAQ,CAAA;ADGvB,ACFA,eEHE,CHKE,ACFA,CDEC,AIPQ,CJOP,CCFC,EDEE,AEKF,CDPG,CDEC,CAAC,ACFA,CAAA,AGLS,CJOP,CAAC,CEKD,CFLG,CAAC,AGLf,EHKiB,CAAC,CGLd,CHKgB,CAAC,AGLf,EHKiB,CAAC,EAAE,CAAA,CGLb,EAAE,OAAO,EAAE;AHM3B,ACFA,gBDEI,ACFA,CDEC,ACFA,CDEC,GAAG,ACFA,CAAC,CDEC,CAAA,QCFA,IAAI,EAAE,KAAK,sBAAyB;ADG/C,ACFI,gBDEA,CAAC,CAAC,ECFE,CDEC,EAAE,CAAA,CCFE,GAAG,QAAQ,EAChB,OAAM;ADEd,ACDI,AENJ,gBHOI,AGPA,CHOC,CAAC,GAAG,ACDA,EENE,EHOE,ACDA,CDCA,ACDC,CENC,AEFC,EJQC,CAAC,EAAE,AENA,CFMC,GAAG,IENI,CFMC,CELzB,CFK2B,CAAC,AIRC,EJQC,EELxB,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;AHOvD,ACDQ,AELR,eCHC,CJSG,AGNA,OHMO,ACDA,AELA,CHMC,GCDG,EDCE,AITf,CDGgB,CCHd,EHQiB,AGRf,CHQe,CELE,EHME,AITf,EJSiB,AITf,ODGsB,EAC9B,OAAO,GAAG,KAAK,CAAA;AHMf,AGLJ,ACJA,gBDII,ACJA,CHOiB,AACjB,GAAG,CDCE,EGLE,ACJA,CHQA,CDCE,EITE,CHQA,CAAC,CDCC,ACDA,AEJC,ECJE,CHQA,CDCC,CAAC,AGLC,CFIA,CAAA,MGRQ,EAC3B,CDG8B,EAC9B,CCJI,GAAG,GDIA,GAAG,EAAE,CAAA,CCJK,CAAA;AJSb,ACDJ,AEHJ,ACJA,gBDII,ACJA,IHOI,CGPC,EDIE,CHIC,ACDA,AGPA,CJQC,AGJA,CHIC,CCDC,MAAM,AGPjB,CHOkB,IAAI,AGPjB,CHOkB,AGPd,CJQe,CAAC,ECDE,AGPd,CHOe,CAAC,AGPd,CJQc,ACDC,CDCA,ACDA,EDEtB,CITY,EAAE,CJSV,CAAC,GAAG,CAAC,AITW,EAAK,GJSZ,EAAE,CAAC,CAAC,KAAI,CAAC,CAAC,CAAA;ACD/B,AEHA,ACJA,iBJQ+B,GCD3B,AEHA,ACJA,GDIG,CFGC,AGPA,CHOC,CEHC,AERE,GDIC,CDIC,CFGC,AEHA,GFGG,AEHA,CFGC,CEHC,CFGC,AEHD,ECJG,GCJK,CDID,IAAI,KAAK,MAAM,EACtC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;ADIlD,ACHA,aJOH,OGJO,ACHA,CDGC,ACHA,CAAC,CAAC,CDGC,CAAC,GAAG,CAAC,CAAC,ACHA,CAAC,CDGC,GAAG,CAAC,CAAC,EAAE,ECHP,CDGU,CAAC,CAAC,CAAC,CAAA,ACHR,EAAK;AJQ9B,ACFQ,AGLA,aDGP,GHIG,OAAO,CAAC,CIPC,CAAC,CHKH,EDEM,ECFF,AGLI,EAAE,CHKH,CAAA,EDEO,CIPC,GJOG,AIPA,CJOC,AIPA,EAAE,IAAI,CAAC,CAAA,IJOK,KAAK,EAC3C,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AACf,ACHQ,AEFR,gBAAI,CAAC,ACHA,CAAC,CJQC,AIRD,GDGI,CHKC,CAAA,AGLC,CAAC,GFED,IEFQ,CFEH,AEFI,GFED,IAAI,CAAA,EEFF,UAAU,EAAK;AFG7B,AEFJ,ACHA,SJQP,WGLW,ACHA,IAAI,ECRI,EJaJ,CAAC,AGLI,CDGC,GACR,GFCU,CAAC,AGLI,GDIR,CCJY,CCRG,GDQC,EHKX,AEDE,CAAC,EFCA,AGLa,EHKR,IGLc,EDIT,ACH3B,CDG4B,CCH1B,CAAC,GDG8B,CCH1B,CAAC,IAAI,EAAE,GDG8B,CCH1B,EDIhB,ACJkB,KAAK,EDIhB,ACJkB,CDIjB,KCJuB,EAAE,GDIf,CAAC,GACnB,CCLyC,CAAC,CAA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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (T, A, C) {\n        if (typeof T === \"undefined\")\n            throw new Error(\"init: invalid argument\")\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (L, C, O) {\n        if (arguments.length === 0)\n            return this.L\n        else if (arguments.length <= 3) {\n            this.L.L = L || 0\n            this.L.C = C || 0\n            this.L.O = O || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set () {\n        if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n            let args = arguments\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (arguments.length === 2)\n            this.A[arguments[0]] = arguments[1]\n        else\n            throw new Error(\"set: invalid arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  add child AST node(s)  */\n    add () {\n        if (arguments.length === 0)\n            throw new Error(\"add: missing argument(s)\")\n        let _add = (node, child) => {\n            if (!((typeof child   === \"object\") &&\n                  (typeof child.T === \"string\") &&\n                  (typeof child.L === \"object\") &&\n                  (typeof child.A === \"object\") &&\n                  (typeof child.P === \"object\") &&\n                  (typeof child.C === \"object\" && child.C instanceof Array)))\n                throw new Error(`add: invalid AST node: ${ JSON.stringify(child) }`)\n            node.C.push(child)\n            child.P = node\n        }\n        if (arguments !== null) {\n            Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n                if (typeof arg === \"object\" && arg instanceof Array)\n                    arg.forEach((child) => { _add(this, child) })\n                else if (arg !== null)\n                    _add(this, arg)\n            })\n        }\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del () {\n        if (arguments.length === 0)\n            throw new Error(\"del: invalid argument\")\n        Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === arg) {\n                    this.C.splice(j, 1)\n                    arg.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: child not found\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"string\":\n                            let hex = (ch) => ch.charCodeAt(0).toString(16).toUpperCase()\n                            out += \"\\\"\" +\n                                value.replace(/\\\\/g, \"\\\\\\\\\")\n                                    .replace(/\"/g, \"\\\\\\\"\")\n                                    .replace(/\\x08/g, \"\\\\b\")\n                                    .replace(/\\t/g, \"\\\\t\")\n                                    .replace(/\\n/g, \"\\\\n\")\n                                    .replace(/\\f/g, \"\\\\f\")\n                                    .replace(/\\r/g, \"\\\\r\")\n                                    .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n                                    .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    (ch) => \"\\\\x\"  + hex(ch))\n                                    .replace(/[\\u0100-\\u0FFF]/g,         (ch) => \"\\\\u0\" + hex(ch))\n                                    .replace(/[\\u1000-\\uFFFF]/g,         (ch) => \"\\\\u\"  + hex(ch)) +\n                                \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += value.source\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 1: false */\n/* global 4: false */\n/* global 20150523:  false */\n\nconst version = {\n    major: 1,\n    minor: 1,\n    micro: 4,\n    date:  20150523\n}\n\nexport default version\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos, attrMap) {\n        if (typeof node !== \"object\")\n            throw new Error(\"merge: invalid AST node argument\")\n        if (typeof takePos === \"undefined\")\n            takePos = false\n        if (typeof attrMap === \"undefined\")\n            attrMap = {}\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when) {\n        if (typeof when === \"undefined\")\n            when = \"downward\"\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase    from \"./asty-base.js\"\nimport ASTYMerge   from \"./asty-merge.js\"\nimport ASTYWalk    from \"./asty-walk.js\"\nimport ASTYDump    from \"./asty-dump.js\"\nimport ASTYVersion from \"./asty-version.js\"\n\nexport default class ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n}\n\n"]}