{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-dump.js","src/asty-serialize.js","src/asty-merge.js","src/asty-version.js","src/asty.js","src/asty-walk.js"],"names":["ASTYBase","T","A","C","Error","this","ASTy","L","O","P","_name","hasOwnProperty","set","Array","add","arguments","length","line","column","offset","args","_arguments","Object","keys","forEach","key","_this","_add","node","child","JSON","stringify","push","prototype","slice","call","arg","_this2","found","j","_this3","splice","ASTYDump","maxDepth","undefined","Infinity","out","walk","depth","i","first","value","hex","ch","charCodeAt","toString","toUpperCase","replace","RegExp","source","ASTYSerialize","asty","serializeNode","clone","parse","map","isA","json","unserializeNode","create","pos","obj","ASTYMerge","takePos","attrMap","attrs","attrSource","attrTarget","get","childs","version","major","minor","micro","date","ASTYCtx","ASTYNode","mixins","_astyBaseJs2","_astyMergeJs2","_astyWalkJs2","_astyDumpJs2","mixin","proto","method","_astyVersionJs2","type","init","_astySerializeJs2","serialize","unserialize","ASTYWalk","cb","when","_walk","parent"],"mappings":"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1BkB,wBAAAA;;;;;;;;;;;;;;;;;;;;;;ILPA,QAAQ;aAAR,QAAQ;ICAR,QAAQ,kBDAR,QAAQ;aCAR,QAAQ;IEAR,SAAS,iBFAT,QAAQ;aEAR,IHAA,KGAS,GHAD;IEAR,aAAa,aCAb,SAAS;aDAT,IDAA,QAAQ,CCAK;AEKlC,IAAM,OAAO,GAAG,gBFLK,aAAa;AEM9B,SAAK,EAAE,CAAC,GJJH,EGFY,SAAS,GHEpB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACX,AIIJ,IEPiB,KFOZ,EAAE,CAAC,AEPiB,INGjB,OAAO,CAAC,KAAK,WAAW,EACxB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;AAC7C,AIGJ,SAAK,EAAE,CAAC,CERS,ELEZ,CDGG,CAAC,AELQ,IFKJ,AMLY,GNKT,IAAI,CAAA,ACHd,CCFwB,ODEhB,EAAE;ADIZ,ACHA,AGMJ,QAAI,EAAG,MJHC,ACHA,CDGC,CAAC,AIGK,GJHF,CAAC,CAAA,CCHE,KAAK,CKHJ,QLGa,AKHL,ELIjB,QAAQ,GAAG,QAAQ,CAAA;ADGvB,ACFA,CGKP,CAAA,aDRS,CHKE,ACFA,CDEC,CAAC,CCFC,EDEE,CCFC,CDEC,CAAC,ACFA,CAAA,CDEE,CAAC,EAAE,CAAC,AGLf,EHKiB,CAAC,CGLd,CHKgB,CAAC,AGLf,EHKiB,CAAC,EAAE,CAAA,CGLb,EAAE,OAAO,EAAE;AHM3B,ACFA,gBDEI,ACFA,CDEC,ACFA,CDEC,GAAG,ACFA,CAAC,CDEC,CAAA,EKRO,MJMP,IAAI,EAAE,IINiB,CJMZ,sBAAyB;ADG/C,ACFI,eCLS,CFOT,CAAC,AMTQ,CNSP,ECFE,CDEC,AIGF,EJHI,CAAA,CCFE,AKPQ,GLOL,AGKF,MFVA,EDKU,EAChB,ACNU,EAAE,IAAI,CDMV,CCNY;AFQ1B,ACDI,AENJ,ADAA,gBFOI,AGPA,ADAE,CFOD,CAAC,GAAG,ACDA,EENE,EHOE,ACDA,CDCA,ACDC,CENC,EFME,ACNE,CDMD,EAAE,AENA,ADAE,CDMD,GAAG,IENI,CFMC,ACNvB,CCCF,CFK2B,CAAC,EAAE,EELxB,IAAI,EDDK,CAAI,ECCJ,CAAC,CDDO,EAAK,+BCCsB,CAAC,CAAA;AHOvD,ACDQ,AELR,ADDI,gBFOA,AGNA,IDDI,GFOG,ACDA,AELA,CHMC,CEPC,EDME,CCNC,CFOC,CGNC,GFKG,CAAA,CELE,EHME,EAAE,OGNO,EAC9B,OAAO,GAAG,KAAK,CAAA;AHMf,AGLJ,ADFQ,gBCEJ,CFGiB,AACjB,GAAG,CDCE,AEPA,ECEE,ADFA,CDMA,CDCE,EEPE,AGJG,CJUH,ACNC,CDMA,ACNC,CFOA,ACDA,AEJC,GFIE,CDCC,CAAC,AGLC,CFIA,CAAA,OIVY,EFMD,EAC9B,OAAO,GAAG,EAAE,CAAA;AHKR,ACDJ,AEHJ,ADHQ,eIJP,CHOG,IFGI,CCNC,ECGE,ADHA,CFOC,ACDA,CDCC,AGJA,ADHA,CFOC,AEPA,CDMC,CCNC,CIJd,EAAE,CJIgB,CDMC,ACNA,AIJf,CLUgB,ACNA,CAAC,CAAC,CIJd,CLUgB,ACNA,CDMC,ACNA,AIJf,CNWgB,CAAC,AEPA,EDME,CAAC,CAAC,ACNA,CFOA,ACDC,ACNA,CFOA,ACDA,ACNC,CAAC,CFQxB,AERyB,EAAE,CAAC,CFQxB,CAAC,AERyB,GFQtB,CAAC,AERyB,CAAC,CAAC,CAAC,CAAC,CFQzB,CER2B,CFQzB,CAAC,CAAC,KAAI,CAAC,CAAC,CAAA;ACD/B,AEHA,AGPJ,gBAAI,CNW+B,AEP9B,CAAA,EDMG,AEHA,GAAG,AGPA,CLUC,CAAC,CEHC,CGPC,GHOG,CFGC,AEHA,CGPC,ELUE,AEHA,CFGC,CEHC,CFGC,AEHD,MGPO,EAC3B,IAAI,GAAG,UAAU,CAAA;AHOjB,ADHA,AIHJ,aNUC,GMVG,IHMI,ADHA,CCGC,AGNA,GHMG,ADHA,AIHA,CHMC,EDHE,CCGC,CAAC,CAAC,EAAE,CDHC,AIHjB,CJGkB,CCGC,CAAC,CAAC,CDHC,AIHjB,CHMkB,ADHA,AIHd,GHMiB,CAAC,ADHA,AIHd,CHMe,ADHA,CCGC,ADHA,AIHd,CHMc,ADHC,CAAA,GIHV,EAAE,MAAM,EAAK;ANWrC,ACFQ,ACLJ,AIHA,aHMH,GHIG,IEPI,AIHA,GNUG,CAAC,AEPA,AIHA,CJGC,CGPK,CJYP,EDEM,AMVA,ELQF,ACLI,GDKD,ACLI,CDKJ,ACLK,EFOE,AEPA,EIHE,ENUE,CAAC,AKdI,CCIH,IAAI,KAAK,ENUE,IMVI,CNUC,CMTvC,CNUJ,CMVM,CAAC,ENUH,CAAC,CMVM,CAAC,CNUJ,CAAC,CAAC,CAAC,AMVK,CNUL,CMVO,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;ANWtD,ACHQ,AEFR,ADHQ,AIFJ,gBHKA,CAAC,EHKE,CMVC,CAAC,CHKC,AGLA,CNUC,AMVA,CNUA,AGLC,CAAC,ADHA,CAAC,CAAC,CDKH,ECLM,AIFA,CAAC,CHKC,ADHA,CDKH,AEFI,ADHD,GDKA,IAAI,CAAA,AKPJ,EHKE,GGLG,EAAK,KHKE,EAAK;AFG7B,AEFJ,ADHI,AIFA,SNUX,WGLW,IDHI,CAAC,AIFA,CAAC,ELOF,CAAC,CEFK,CGLC,CJEC,CCIV,ADJW,AIFA,GLOD,CAAC,CKPK,EHMT,CGNY,CAAC,CJER,CIFU,EJEP,CDKH,AEDE,CAAC,ADJK,AIFM,CAAC,CLOZ,AKPY,ELOP,MEDK,CAAC,KAAK,WAAW,GAC1C,OAAO,CAAC,UAAU,CAAC,GACnB,UAAU,AACf,CAAA;AFDO,AEER,ADPQ,iBIFP,CAAC,CAAA,CHSE,QDPQ,ECOE,EFFF,CAAC,ACLI,ECOE,CDPC,EDKF,CEEK,CFDX,ACNY,CCQpB,ADRqB,CAAC,CDMX,ACNY,GAAG,CDMX,AEEV,ADRsB,CAAA,ECQnB,CFFW,AEEV,CFFU,KAEX,IEAW,CFAN,CEAQ,EFAL,EEAS,CAAC,EFAL,CAAA,AEAQ,CAAC,UAAU,CAAC,CAAC,CAAA;AFCtC,ACRA,AIFR,aHUH,CAAC,CAAA,KGVM,IAAI,EDRM,GCQD,ELUF,CCRK,GDQD,EKVM,CLUH,CCRK,EDQF,AKVI,CDRK,EHUF,CDQH,AKVI,CLUJ,IKVS,MAAM,EACpC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAA;ALUxC,AEAZ,ADRgB,aIDf,CAAA,EHSG,CAAC,MAAM,EAAE,CAAC,MFAE,CEAK,ADRA,CCQC,GFAD,GAAG,ECRM,CAAC,CDQH,AEAL,CFAM,CAAC,CAAC,EEAH,C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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (T, A, C) {\n        if (typeof T === \"undefined\")\n            throw new Error(\"init: invalid argument\")\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (line, column, offset) {\n        if (arguments.length === 0)\n            return {\n                line:   this.L.L,\n                column: this.L.C,\n                offset: this.L.O\n            }\n        else if (arguments.length <= 3) {\n            this.L.L = line   || 0\n            this.L.C = column || 0\n            this.L.O = offset || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set () {\n        if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n            let args = arguments\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (arguments.length === 2)\n            this.A[arguments[0]] = arguments[1]\n        else\n            throw new Error(\"set: invalid arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  add child AST node(s)  */\n    add () {\n        if (arguments.length === 0)\n            throw new Error(\"add: missing argument(s)\")\n        let _add = (node, child) => {\n            if (!((typeof child   === \"object\") &&\n                  (typeof child.T === \"string\") &&\n                  (typeof child.L === \"object\") &&\n                  (typeof child.A === \"object\") &&\n                  (typeof child.P === \"object\") &&\n                  (typeof child.C === \"object\" && child.C instanceof Array)))\n                throw new Error(`add: invalid AST node: ${ JSON.stringify(child) }`)\n            node.C.push(child)\n            child.P = node\n        }\n        if (arguments !== null) {\n            Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n                if (typeof arg === \"object\" && arg instanceof Array)\n                    arg.forEach((child) => { _add(this, child) })\n                else if (arg !== null)\n                    _add(this, arg)\n            })\n        }\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del () {\n        if (arguments.length === 0)\n            throw new Error(\"del: invalid argument\")\n        Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === arg) {\n                    this.C.splice(j, 1)\n                    arg.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: child not found\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"string\":\n                            let hex = (ch) => ch.charCodeAt(0).toString(16).toUpperCase()\n                            out += \"\\\"\" +\n                                value.replace(/\\\\/g, \"\\\\\\\\\")\n                                    .replace(/\"/g, \"\\\\\\\"\")\n                                    .replace(/\\x08/g, \"\\\\b\")\n                                    .replace(/\\t/g, \"\\\\t\")\n                                    .replace(/\\n/g, \"\\\\n\")\n                                    .replace(/\\f/g, \"\\\\f\")\n                                    .replace(/\\r/g, \"\\\\r\")\n                                    .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, (ch) => \"\\\\x0\" + hex(ch))\n                                    .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    (ch) => \"\\\\x\"  + hex(ch))\n                                    .replace(/[\\u0100-\\u0FFF]/g,         (ch) => \"\\\\u0\" + hex(ch))\n                                    .replace(/[\\u1000-\\uFFFF]/g,         (ch) => \"\\\\u\"  + hex(ch)) +\n                                \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += value.source\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYSerialize {\n    /*  recursively serialize AST nodes into JSON string  */\n    static serialize (asty, node) {\n        const serializeNode = (node) => {\n            let clone = {\n                T: node.T,\n                L: { L: node.L.L, C: node.L.C, O: node.L.O }\n            }\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                clone.A = {}\n                keys.forEach((key) => {\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            clone.A[key] = value\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            clone.A[key] = JSON.parse(JSON.stringify(value))\n                            break\n                    }\n                })\n            }\n            if (node.C.length > 0)\n                clone.C = node.C.map((C) => serializeNode(C))\n            return clone\n        }\n        if (!asty.isA(node))\n            throw new Error(\"failed to serialize: not an ASTy node\")\n        return JSON.stringify({ ASTy: serializeNode(node) })\n    }\n\n    /*  recursively unserialize JSON string into AST nodes  */\n    static unserialize (asty, json) {\n        const unserializeNode = (clone) => {\n            let node = asty.create(clone.T)\n            node.pos(clone.L.L, clone.L.C, clone.L.O)\n            if (typeof clone.A === \"object\") {\n                Object.keys(clone.A).forEach((key) => {\n                    let value = clone.A[key]\n                    switch (typeof value) {\n                        case \"boolean\":\n                        case \"number\":\n                        case \"string\":\n                            node.set(key, value)\n                            break\n                        default:\n                            /*  use the slow approach only for non-atomic attributes  */\n                            node.set(key, JSON.parse(JSON.stringify(value)))\n                            break\n                    }\n                })\n            }\n            if (typeof clone.C === \"object\" && clone.C instanceof Array)\n                node.add(clone.C.map((C) => unserializeNode(C)))\n            return node\n        }\n        let obj = JSON.parse(json)\n        if (typeof obj !== \"object\" || typeof obj.ASTy !== \"object\")\n            throw new Error(\"failed to unserialize: not an ASTy JSON export\")\n        return unserializeNode(obj.ASTy)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos, attrMap) {\n        if (typeof node !== \"object\")\n            throw new Error(\"merge: invalid AST node argument\")\n        if (typeof takePos === \"undefined\")\n            takePos = false\n        if (typeof attrMap === \"undefined\")\n            attrMap = {}\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 2: false */\n/* global 2: false */\n/* global 20150818:  false */\n\nconst version = {\n    major: 1,\n    minor: 2,\n    micro: 2,\n    date:  20150818\n}\n\nexport default version\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase      from \"./asty-base.js\"\nimport ASTYMerge     from \"./asty-merge.js\"\nimport ASTYWalk      from \"./asty-walk.js\"\nimport ASTYDump      from \"./asty-dump.js\"\nimport ASTYSerialize from \"./asty-serialize.js\"\nimport ASTYVersion   from \"./asty-version.js\"\n\nexport default class ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n    serialize (node) {\n        return ASTYSerialize.serialize(this, node)\n    }\n    unserialize (json) {\n        return ASTYSerialize.unserialize(this, json)\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when) {\n        if (typeof when === \"undefined\")\n            when = \"downward\"\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n"]}