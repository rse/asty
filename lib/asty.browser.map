{"version":3,"sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-merge.js","src/asty-dump.js","src/asty-version.js","src/asty-walk.js","src/asty.js"],"names":["ASTYBase","T","A","C","Error","this","ASTy","L","O","P","_name","hasOwnProperty","set","Array","add","arguments","length","args","_arguments","Object","keys","forEach","key","_this","_add","node","child","JSON","stringify","push","prototype","slice","call","arg","_this2","found","j","_this3","splice","ASTYMerge","takePos","attrMap","pos","attrs","attrSource","attrTarget","get","childs","ASTYDump","maxDepth","undefined","Infinity","out","walk","depth","i","first","value","replace","RegExp","toString","version","major","minor","micro","date","ASTYWalk","cb","when","_walk","_walk2","parent","ASTYCtx","ASTYNode","mixins","_ASTYBase2","_ASTYMerge2","_ASTYWalk2","_ASTYDump2","mixin","proto","method","_ASTYVersion2","type","init"],"mappings":"AAAA;wbCwBqBA,UAAQ,mBAARA,0BAAAA,uBAAAA,qBAEZ,SAACC,EAAGC,EAAGC,GACR,GAAiB,mBAANF,GACP,KAAM,IAAIG,OAAM,yBAOpB,IANAC,KAAKC,MAAO,EACZD,KAAKJ,EAAIA,EACTI,KAAKE,GAAMA,EAAG,EAAGJ,EAAG,EAAGK,EAAG,GAC1BH,KAAKH,KACLG,KAAKF,KACLE,KAAKI,EAAI,KACQ,gBAANP,GACP,IAAK,GAAIQ,KAAQR,GACTA,EAAES,eAAeD,IACjBL,KAAKO,IAAIF,EAAMR,EAAEQ,GAI7B,OAFiB,gBAANP,IAAkBA,YAAaU,QACtCR,KAAKS,IAAIX,GACNE,yBAIN,SAACJ,GACF,GAAyB,IAArBc,UAAUC,OACV,MAAOX,MAAKJ,CACX,IAAyB,IAArBc,UAAUC,OAEf,MADAX,MAAKJ,EAAIA,EACFI,IAGP,MAAM,IAAID,OAAM,wDAIpB,SAACG,EAAGJ,EAAGK,GACP,GAAyB,IAArBO,UAAUC,OACV,MAAOX,MAAKE,CACX,IAAIQ,UAAUC,QAAU,EAIzB,MAHAX,MAAKE,EAAEA,EAAIA,GAAK,EAChBF,KAAKE,EAAEJ,EAAIA,GAAK,EAChBE,KAAKE,EAAEC,EAAIA,GAAK,EACTH,IAGP,MAAM,IAAID,OAAM,uDAIpB,iCACA,IAAyB,IAArBW,UAAUC,QAAwC,gBAAjBD,WAAU,eAC3C,GAAIE,GAAIC,CACRC,QAAOC,KAAKH,EAAK,IAAII,QAAQ,SAACC,GAC1BC,EAAKrB,EAAEoB,GAAOL,EAAK,GAAGK,YAGzB,CAAA,GAAyB,IAArBP,UAAUC,OAGf,KAAM,IAAIZ,OAAM,yBAFhBC,MAAKH,EAAEa,UAAU,IAAMA,UAAU,GAGrC,MAAOV,yBAIP,SAACiB,GACD,GAAyB,IAArBP,UAAUC,OACV,KAAM,IAAIZ,OAAM,mCACpB,IAAmB,gBAARkB,GACP,KAAM,IAAIlB,OAAM,wBACpB,OAAOC,MAAKH,EAAEoB,wBAIZ,WACF,MAAOH,QAAOC,KAAKf,KAAKH,sBAIxB,qBACA,IAAyB,IAArBa,UAAUC,OACV,KAAM,IAAIZ,OAAM,2BACpB,IAAIoB,GAAO,SAACC,EAAMC,GACd,KAA0B,gBAAZA,IACY,gBAAZA,GAAMzB,GACM,gBAAZyB,GAAMnB,GACM,gBAAZmB,GAAMxB,GACM,gBAAZwB,GAAMjB,GACM,gBAAZiB,GAAMvB,GAAkBuB,EAAMvB,YAAaU,QACrD,KAAM,IAAIT,OAAK,0BAA4BuB,KAAKC,UAAUF,GAC9DD,GAAKtB,EAAE0B,KAAKH,GACZA,EAAMjB,EAAIgB,EAUd,OARkB,QAAdV,WACAF,MAAMiB,UAAUC,MAAMC,KAAKjB,UAAW,GAAGM,QAAQ,SAACY,GAC3B,gBAARA,IAAoBA,YAAepB,OAC1CoB,EAAIZ,QAAQ,SAACK,GAAYF,EAAIU,EAAOR,KACvB,OAARO,GACLT,EAAIU,EAAOD,KAGhB5B,wBAIP,qBACA,IAAyB,IAArBU,UAAUC,OACV,KAAM,IAAIZ,OAAM,wBAcpB,OAbAS,OAAMiB,UAAUC,MAAMC,KAAKjB,UAAW,GAAGM,QAAQ,SAACY,GAE9C,IAAK,GADDE,IAAQ,EACHC,EAAI,EAAGA,EAAIC,EAAKlC,EAAEa,OAAQoB,IAC/B,GAAIC,EAAKlC,EAAEiC,KAAOH,EAAK,CACnBI,EAAKlC,EAAEmC,OAAOF,EAAG,GACjBH,EAAIxB,EAAI,KACR0B,GAAQ,CACR,OAGR,IAAKA,EACD,KAAM,IAAI/B,OAAM,0BAEjBC,2BAIJ,WACH,MAAOA,MAAKF,wBAIT,WACH,MAAOE,MAAKI,MAjICT,wBAAAA;;wbEAAgD,UAAQ,mBAARA,0BAAAA,uBAAAA,qBAEZ,SAACC,GACeC,SAAbD,IACAA,EAAWE,EAAAA,EACf,IAAIC,GAAM,EA0CV,OAzCA/C,MAAKgD,KAAK,SAAC5B,EAAM6B,GACb,KAAIA,EAAQL,GAAZ,CAEA,IAAK,GAAIM,GAAI,EAAOD,EAAJC,EAAWA,IACvBH,GAAO,MACXA,IAAO3B,EAAKxB,EAAI,GAChB,IAAImB,GAAOD,OAAOC,KAAKK,EAAKvB,EACxBkB,GAAKJ,OAAS,eACdoC,GAAO,GACP,IAAII,IAAQ,CACZpC,GAAKC,QAAQ,SAACC,GACLkC,EAGDA,GAAQ,EAFRJ,GAAO,KAGXA,GAAO9B,EAAM,IACb,IAAImC,GAAQhC,EAAKvB,EAAEoB,EACnB,cAAemC,IACX,IAAK,SACDL,GAAO,IAAOK,EAAMC,QAAQ,KAAM,OAAOA,QAAQ,IAAK,OAAU,GAChE,MACJ,KAAK,SAEGN,GADAK,YAAiBE,QACV,IACHF,EAAMG,WACLF,QAAQ,MAAO,IACfA,QAAQ,MAAO,IACfA,QAAQ,MAAO,OACpB,IAEO/B,KAAKC,UAAU6B,EAC1B,MACJ,SACIL,GAAOzB,KAAKC,UAAU6B,MAIlCL,GAAO,QAEXA,GAAO,IAAM3B,EAAKlB,EAAEA,EAAI,IAAMkB,EAAKlB,EAAEJ,EAAI,QAC1C,YACIiD,MA/CMJ,wBAAAA;;wbDAAT,WAAS,mBAATA,0BAAAA,uBAAAA,sBAEX,SAACd,EAAMe,EAASC,aAClB,IAAoB,gBAAThB,GACP,KAAM,IAAIrB,OAAM,mCAKpB,IAJuB,mBAAZoC,KACPA,GAAU,GACS,mBAAZC,KACPA,MACAD,EAAS,CACT,GAAIE,GAAMjB,EAAKiB,KACfrC,MAAKqC,IAAIA,EAAInC,EAAGmC,EAAIvC,EAAGuC,EAAIlC,GAc/B,MAZAiB,GAAKkB,QAAQtB,QAAQ,SAACuB,GAClB,GAAIC,GACiC,mBAAxBJ,GAAQG,GACfH,EAAQG,GACRA,CAEa,QAAfC,GACAtB,EAAKX,IAAIiC,EAAYpB,EAAKqB,IAAIF,MAEtCnB,EAAKsB,SAAS1B,QAAQ,SAACK,GACnBH,EAAKT,IAAIY,KAENrB,SAzBMkC,wBAAAA;;mEEKrB,IAAIsB,UACAC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,KAAO,6BAGIJ;;wbCZMK,UAAQ,mBAARA,0BAAAA,uBAAAA,qBAEZ,SAACC,EAAIC,GACc,mBAATA,KACPA,EAAO,WACX,IAAIC,GAAK,SAAAC,yGAAG,SAAC7C,EAAM6B,EAAOiB,IACT,aAATH,GAAgC,SAATA,IACvBD,EAAGnC,KAAK,KAAMP,EAAM6B,EAAOiB,EAAQ,YACvC9C,EAAKtB,EAAEkB,QAAQ,SAACK,GACZ2C,EAAM3C,EAAO4B,EAAQ,EAAG7B,MAEf,WAAT2C,GAA8B,SAATA,IACrBD,EAAGnC,KAAK,KAAMP,EAAM6B,EAAOiB,EAAQ,WAG3C,OADAF,GAAMhE,KAAM,EAAG,MACRA,SAfM6D,wBAAAA;;uhBCAG,mFACA,qFACA,kFACA,qFACA,yEAEHM,QAAO,WACZ,QADKA,qCAAAA,GAEbnE,KAAKoE,SAAW,YAChB,IAAIC,KACAC,WAAA,WAAa,OAAQ,OAAQ,MAAO,MAAO,MAAO,QAAS,MAAO,MAAO,SAAU,WACnFC,YAAA,WAAa,UACbC,WAAA,WAAa,SACbC,WAAA,WAAa,QAQjB,OANAJ,GAAOrD,QAAQ,SAAC0D,GACZ,GAAIC,GAAQD,EAAM,GAAGjD,SACrBiD,GAAMhD,MAAM,GAAGV,QAAQ,SAAC4D,GACpB1D,EAAKkD,SAAS3C,UAAUmD,GAAUD,EAAMC,OAGzC5E,yBAfMmE,wBAiBT,WACJ,MAAAU,eAAA,iCAEG,SAACH,GACJ,IAAK,GAAIE,KAAUF,GACXA,EAAMpE,eAAesE,KACrB5E,KAAKoE,SAAS3C,UAAUmD,GAAUF,EAAME,GAAO,OAChD5E,4BAEJ,SAAC8E,GACJ,OAAO,GAAK9E,MAAKoE,UAAYW,KAAKD,sBAElC,SAAC1D,GACD,MACuB,gBAATA,IACPA,YAAgBpB,MAAKoE,UACA,iBAAdhD,GAAKnB,MACZmB,EAAKnB,QAAS,MAlCRkE,wBAAAA;;;;;;;;;;;;;;;;;;;;;;;ILNA,QAAQ;aAAR,QAAQ;IEAR,QAAQ,kBFAR,QAAQ;aEAR,QAAQ;IDAR,SAAS,iBCAT,QAAQ;aDAR,IDAA,KCAS,GDAD;8BCAR,SAAS;AEK9B,IAAI,OAAO,GAAG,GDLO,QAAQ;ACMzB,ICNiB,KDMZ,EAAE,CAAC,ACNiB;ADOzB,SAAK,EAAE,CAAC,CCPS,EJEZ,ECFY,IGAQ,KHAC,GDEpB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACX,AGKJ,SAAK,EAAE,CAAC,IHLA,OAAO,CAAC,KAAK,CIHJ,QAAQ,EJGO,EACxB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAA;AAC7C,AGIJ,QAAI,EAAG,KDPF,CFGG,CAAC,CGIM,GHJF,GAAG,IAAI,CAAA,AEHd,QAAQ,EAAE;AFIZ,AEHA,CCOP,CAAA,cHJW,AEHA,CFGC,CAAC,GAAG,CAAC,CAAA,CEHE,AGHI,KHGC,SAAS,EACtB,AGJ4B,QHIpB,GAAG,QAAQ,CAAA;AFGvB,AEFA,eDHE,CDKE,AEFA,CFEC,AIPQ,CJOP,CEFC,EFEE,CEFC,CFEC,CAAC,AEFA,CAAA,AELS,CJOP,CAAC,EAAE,CAAC,ACLf,EDKiB,CAAC,CCLd,CDKgB,CAAC,ACLf,EDKiB,CAAC,EAAE,CAAA,CCLb,EAAE,OAAO,EAAE;ADM3B,AEFA,gBFEI,AEFA,CFEC,AEFA,CFEC,GAAG,AEFA,ACMF,CDNG,CFEC,CAAA,IGIG,IDNH,IAAI,EAAE,KAAK,sBAAyB;AFG/C,AEFI,gBFEA,CAAC,CAAC,EEFE,CFEC,EAAE,CAAA,CEFE,GAAG,QAAQ,EAChB,OAAM;AFEd,AEDI,ADNJ,gBDOI,ACPA,CDOC,CAAC,GAAG,AEDA,EDNE,EDOE,AEDA,AGRG,CLSH,AEDC,CDNC,ECME,CAAC,EAAE,ADNA,CCMC,GAAG,IDNI,CCMC,CDLzB,AIH6B,CHQF,CAAC,EAAE,EDLxB,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;ADOvD,AEDQ,ADLR,eGHC,CJSG,ACNA,ODMO,AEDA,ADLA,CDMC,GEDG,EFCE,AITf,CHGgB,CGHd,EFQiB,AERf,CFQe,CDLE,EDME,AITf,EJSiB,AITf,OHGsB,EAC9B,OAAO,GAAG,KAAK,CAAA;ADMf,ACLJ,AGJA,gBHII,AGJA,CFOiB,AACjB,GAAG,CFCE,ECLE,AGJA,CFQA,CFCE,EITE,CFQA,CAAC,CFCC,AEDA,ADJC,EGJE,CFQA,CFCC,CAAC,ACLC,CCIA,CAAA,MERQ,EAC3B,CHG8B,EAC9B,CGJI,GAAG,GHIA,GAAG,EAAE,CAAA,CGJK,CAAA;AJSb,AEDJ,ADHJ,AGJA,gBHII,AGJA,IFOI,CEPC,EHIE,CDIC,AEDA,CFCC,ACJA,CDIC,CEDC,MAAM,CAAC,IAAI,CAAC,CFCC,CAAC,EEDE,CAAC,CAAC,CFCA,AEDC,CFCA,AEDA,EFEtB,IAAI,CAAC,GAAG,CAAC,KAAI,EAAE,CAAC,CAAC,KAAI,CAAC,CAAC,CAAA;AED/B,ADHA,iBDI+B,GED3B,ADHA,GAAG,CCGC,AGXI,CHWH,CDHC,IAAI,CCGC,ADHA,GCGG,ADHA,CCGC,CDHC,CCGC,ADHD,GIRQ;AJS5B,aDIH,OCJO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA;ADKjC,AEFQ,aDFP,GDIG,OAAO,CAAC,GEFD,EFEM,EEFF,GAAG,CAAA,EFEO,IAAI,CAAC,YAAY,KAAK,EAC3C,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AACf,AEHQ,ADFR,gBAAI,CAAC,EDKE,GCLG,CDKC,CAAA,ACLC,CAAC,GCED,IDFQ,CCEH,ADFI,GCED,IAAI,CAAA,EDFF,UAAU,EAAK;ACG7B,ADFJ,SDKP,WCLW,IIXQ,IHaJ,CAAC,CDFK,GACR,GCCU,CAAC,GDDJ,AIZe,OHaV,ADDE,CAAC,ECCA,EAAK,MDDK,CAAC,KAAK,WAAW,GAC1C,OAAO,CAAC,UAAU,CAAC,GACnB,UAAU,AACf,CAAA;ACDO,ADER,oBAAI,UAAU,ECFF,CAAC,EDEM,GCFD,CDEK,CCDX,CDER,ECFW,IAAI,ADEV,GAAG,CCFW,ADEV,CCFU,KAEX,IDAW,CCAN,CDAQ,ECAL,EDAS,CAAC,ECAL,CAAA,ADAQ,CAAC,UAAU,CAAC,CAAC,CAAA;ACCtC,aDAX,CAAC,CAAA,gBCAa,IAAI,GAAG,GAAG,IAAI,CAAA;AACjB,ADAZ,gBAAI,CAAC,MAAM,EAAE,CAAC,MCAE,CDAK,CAAC,GCAD,GAAG,IAAI,ADAL,CCAM,CAAC,CAAC,EDAH,CCAM,CAAC,ADAF,CCAE;AACvB,ADAR,sBAAK,GAAG,CAAC,CInBG,IJmBE,CAAC,CAAA,GCAC,OAAO,GGnBQ,EHmBH;AAChB,aDAf,CAAC,CDFD,ACEC,AGnBU,UAAC,IJiBX,AIjBe,CJiBd,CIjBgB,CJiBd,IIjBmB,CFmBH,CEnBK,MAAM,CFmBH,CEnBQ;AJkBrC,AEEoB,ADApB,AGnBI,gBJiBA,GCEG,CGnBC,GHmBG,CAAA,AGnBC,CJiBC,CAAC,GIjBG,GJiBG,KAAK,CAAC,CEEH,AEnBI,IFmBA,AEnBI,IFmBA,AEnBI,GFmBD,EEnBM,GFmBD,CAAC,EEnBM,EACtC,EAAE,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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYBase {\n    /*  AST node initialization  */\n    init (T, A, C) {\n        if (typeof T === \"undefined\")\n            throw new Error(\"init: invalid argument\")\n        this.ASTy = true\n        this.T = T\n        this.L = { L: 0, C: 0, O: 0 }\n        this.A = {}\n        this.C = []\n        this.P = null\n        if (typeof A === \"object\") {\n            for (let name in A)\n                if (A.hasOwnProperty(name))\n                    this.set(name, A[name])\n        }\n        if (typeof C === \"object\" && C instanceof Array)\n            this.add(C)\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (L, C, O) {\n        if (arguments.length === 0)\n            return this.L\n        else if (arguments.length <= 3) {\n            this.L.L = L || 0\n            this.L.C = C || 0\n            this.L.O = O || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set () {\n        if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n            let args = arguments\n            Object.keys(args[0]).forEach((key) => {\n                this.A[key] = args[0][key]\n            })\n        }\n        else if (arguments.length === 2)\n            this.A[arguments[0]] = arguments[1]\n        else\n            throw new Error(\"set: invalid arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  add child AST node(s)  */\n    add () {\n        if (arguments.length === 0)\n            throw new Error(\"add: missing argument(s)\")\n        let _add = (node, child) => {\n            if (!((typeof child   === \"object\") &&\n                  (typeof child.T === \"string\") &&\n                  (typeof child.L === \"object\") &&\n                  (typeof child.A === \"object\") &&\n                  (typeof child.P === \"object\") &&\n                  (typeof child.C === \"object\" && child.C instanceof Array)))\n                throw new Error(`add: invalid AST node: ${ JSON.stringify(child) }`)\n            node.C.push(child)\n            child.P = node\n        }\n        if (arguments !== null) {\n            Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n                if (typeof arg === \"object\" && arg instanceof Array)\n                    arg.forEach((child) => { _add(this, child) })\n                else if (arg !== null)\n                    _add(this, arg)\n            })\n        }\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del () {\n        if (arguments.length === 0)\n            throw new Error(\"del: invalid argument\")\n        Array.prototype.slice.call(arguments, 0).forEach((arg) => {\n            let found = false\n            for (let j = 0; j < this.C.length; j++) {\n                if (this.C[j] === arg) {\n                    this.C.splice(j, 1)\n                    arg.P = null\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: child not found\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  get parent AST node  */\n    parent () {\n        return this.P\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYMerge {\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos, attrMap) {\n        if (typeof node !== \"object\")\n            throw new Error(\"merge: invalid AST node argument\")\n        if (typeof takePos === \"undefined\")\n            takePos = false\n        if (typeof attrMap === \"undefined\")\n            attrMap = {}\n        if (takePos) {\n            let pos = node.pos()\n            this.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach((attrSource) => {\n            let attrTarget = (\n                  typeof attrMap[attrSource] !== \"undefined\"\n                ? attrMap[attrSource]\n                : attrSource\n            )\n            if (attrTarget !== null)\n                this.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach((child) => {\n            this.add(child)\n        })\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYDump {\n    /*  dump the AST recursively  */\n    dump (maxDepth) {\n        if (maxDepth === undefined)\n            maxDepth = Infinity\n        let out = \"\"\n        this.walk((node, depth /*, parent, when */) => {\n            if (depth > maxDepth)\n                return\n            for (let i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            let keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                let first = true\n                keys.forEach((key) => {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    let value = node.A[key]\n                    switch (typeof value) {\n                        case \"string\":\n                            out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += \"/\" +\n                                    value.toString()\n                                    .replace(/^\\//, \"\")\n                                    .replace(/\\/$/, \"\")\n                                    .replace(/\\//g, \"\\\\/\") +\n                                \"/\"\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 1: false */\n/* global 2: false */\n/* global 20150421:  false */\n\nlet version = {\n    major: 1,\n    minor: 1,\n    micro: 2,\n    date:  20150421\n}\n\nexport default version\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTYWalk {\n    /*  walk the AST recursively  */\n    walk (cb, when) {\n        if (typeof when === \"undefined\")\n            when = \"downward\"\n        let _walk = (node, depth, parent) => {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach((child) => {\n                _walk(child, depth + 1, node)\n            })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\n","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2015 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport ASTYBase    from \"./asty-base.js\"\nimport ASTYMerge   from \"./asty-merge.js\"\nimport ASTYWalk    from \"./asty-walk.js\"\nimport ASTYDump    from \"./asty-dump.js\"\nimport ASTYVersion from \"./asty-version.js\"\n\nexport default class ASTYCtx {\n    constructor () {\n        this.ASTYNode = () => {}\n        let mixins = [\n            [ ASTYBase,  \"init\", \"type\", \"pos\", \"set\", \"get\", \"attrs\", \"add\", \"del\", \"childs\", \"parent\" ],\n            [ ASTYMerge, \"merge\" ],\n            [ ASTYWalk,  \"walk\" ],\n            [ ASTYDump,  \"dump\" ]\n        ]\n        mixins.forEach((mixin) => {\n            let proto = mixin[0].prototype\n            mixin.slice(1).forEach((method) => {\n                this.ASTYNode.prototype[method] = proto[method]\n            })\n        })\n        return this\n    }\n    version () {\n        return ASTYVersion\n    }\n    extend (mixin) {\n        for (let method in mixin)\n            if (mixin.hasOwnProperty(method))\n                this.ASTYNode.prototype[method] = mixin[method]\n        return this\n    }\n    create (type) {\n        return (new this.ASTYNode()).init(type)\n    }\n    isA (node) {\n        return (\n               typeof node === \"object\"\n            && node instanceof this.ASTYNode\n            && typeof node.ASTy === \"boolean\"\n            && node.ASTy === true\n        )\n    }\n}\n\n"]}