{"version":3,"file":"bundle.js","sources":["node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/asty-base.js","src/asty-mixins.js","src/asty-dump.js","src/asty-query.js","src/asty.js"],"names":["ASTYBase","init","T","Error","this","A","C","P","L","O","merge","node","takePos","attrMap","self","pos","attrs","forEach","attrSource","attrTarget","set","get","childs","child","add","type","arguments","length","args","Object","keys","key","_add","Array","JSON","stringify","push","prototype","slice","call","arg","del","found","j","splice","walk","cb","when","_walk","depth","parent","module","exports","cls","i","mixin","hasOwnProperty","ASTYDump","dump","out","first","value","replace","RegExp","toString","ASTQuery","require","ASTYQuery","mixins","ASTY","_mixins","apply"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Generic Abstract Syntax Tree (AST)\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTYBase {\n    /*  constructor helper: AST node initialization  */\n    init (T) {\n        if (typeof T === \"undefined\")\n            throw new Error(\"init: invalid argument\")\n        this.T = T\n        this.A = {}\n        this.C = []\n        this.P = { L: 0, C: 0, O: 0 }\n        return this\n    }\n\n    /*  merge attributes and childs of an AST node  */\n    merge (node, takePos, attrMap) {\n        if (typeof node !== \"object\")\n            throw new Error(\"merge: invalid AST node argument\")\n        if (typeof takePos === \"undefined\")\n            takePos = false\n        if (typeof attrMap === \"undefined\")\n            attrMap = {}\n        var self = this\n        if (takePos) {\n            var pos = node.pos()\n            self.pos(pos.L, pos.C, pos.O)\n        }\n        node.attrs().forEach(function (attrSource) {\n            var attrTarget = (typeof attrMap[attrSource] !== \"undefined\" ?\n                attrMap[attrSource] : attrSource)\n            if (attrTarget !== null)\n                self.set(attrTarget, node.get(attrSource))\n        })\n        node.childs().forEach(function (child) {\n            self.add(child)\n        })\n        return this\n    }\n\n    /*  check the type of an AST node  */\n    type (T) {\n        if (arguments.length === 0)\n            return this.T\n        else if (arguments.length === 1) {\n            this.T = T\n            return this\n        }\n        else\n            throw new Error(\"type: invalid number of arguments\")\n    }\n\n    /*  set the parsing position   */\n    pos (L, C, O) {\n        if (arguments.length === 0)\n            return this.P\n        else if (arguments.length <= 3) {\n            this.P.L = L || 0\n            this.P.C = C || 0\n            this.P.O = O || 0\n            return this\n        }\n        else\n            throw new Error(\"pos: invalid number of arguments\")\n    }\n\n    /*  set AST node attributes  */\n    set () {\n        if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n            var self = this\n            var args = arguments\n            Object.keys(args[0]).forEach(function (key) { self.A[key] = args[0][key]; })\n        }\n        else if (arguments.length === 2)\n            this.A[arguments[0]] = arguments[1]\n        else\n            throw new Error(\"set: invalid arguments\")\n        return this\n    }\n\n    /*  get AST node attributes  */\n    get (key) {\n        if (arguments.length !== 1)\n            throw new Error(\"get: invalid number of arguments\")\n        if (typeof key !== \"string\")\n            throw new Error(\"get: invalid argument\")\n        return this.A[key]\n    }\n\n    /*  get names of all AST node attributes  */\n    attrs () {\n        return Object.keys(this.A)\n    }\n\n    /*  add child AST node(s)  */\n    add () {\n        if (arguments.length === 0)\n            throw new Error(\"add: missing argument(s)\")\n        var _add = function (C, node) {\n            if (!((typeof node   === \"object\") &&\n                  (typeof node.T === \"string\") &&\n                  (typeof node.P === \"object\") &&\n                  (typeof node.A === \"object\") &&\n                  (typeof node.C === \"object\" && node.C instanceof Array)))\n                throw new Error(\"add: invalid AST node: \" + JSON.stringify(node))\n            C.push(node)\n        }\n        if (arguments !== null) {\n            var self = this\n            Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n                if (typeof arg === \"object\" && arg instanceof Array)\n                    arg.forEach(function (child) { _add(self.C, child) })\n                else if (arg !== null)\n                    _add(self.C, arg)\n            })\n        }\n        return this\n    }\n\n    /*  delete child AST node(s)  */\n    del () {\n        if (arguments.length === 0)\n            throw new Error(\"del: invalid argument\")\n        var self = this\n        Array.prototype.slice.call(arguments, 0).forEach(function (arg) {\n            var found = false\n            for (var j = 0; j < self.C.length; j++) {\n                if (self.C[j] === arg) {\n                    self.C.splice(j, 1)\n                    found = true\n                    break\n                }\n            }\n            if (!found)\n                throw new Error(\"del: child not found\")\n        })\n        return this\n    }\n\n    /*  get child AST nodes  */\n    childs () {\n        return this.C\n    }\n\n    /*  walk the AST recursively  */\n    walk (cb, when) {\n        if (typeof when === \"undefined\")\n            when = \"downward\"\n        var _walk = function (node, depth, parent) {\n            if (when === \"downward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"downward\")\n            node.C.forEach(function (child) { _walk(child, depth + 1, node) })\n            if (when === \"upward\" || when === \"both\")\n                cb.call(null, node, depth, parent, \"upward\")\n        }\n        _walk(this, 0, null)\n        return this\n    }\n}\n\nmodule.exports = ASTYBase\n\n","/*\n**  ASTy -- Generic Abstract Syntax Tree (AST)\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  little helper function for ES6 style mixin support  */\nmodule.exports = function mixins () {\n    var cls = function () {};\n    for (var i = 0; i < arguments.length; i++) {\n        var mixin = arguments[i];\n        if (typeof mixin === \"function\")\n            mixin = mixin.prototype;\n        for (var key in mixin)\n            if (Object.prototype.hasOwnProperty.call(mixin, key))\n                cls.prototype[key] = mixin[key];\n    }\n    return cls;\n};\n\n","/*\n**  ASTy -- Generic Abstract Syntax Tree (AST)\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTYDump {\n    /*  dump the AST recursively  */\n    dump () {\n        var out = \"\"\n        this.walk(function (node, depth /*, parent, when */) {\n            for (var i = 0; i < depth; i++)\n                out += \"    \"\n            out += node.T + \" \"\n            var keys = Object.keys(node.A)\n            if (keys.length > 0) {\n                out += \"(\"\n                var first = true\n                keys.forEach(function (key) {\n                    if (!first)\n                        out += \", \"\n                    else\n                        first = false\n                    out += key + \": \"\n                    var value = node.A[key]\n                    switch (typeof value) {\n                        case \"string\":\n                            out += \"\\\"\" + value.replace(/\\n/, \"\\\\n\").replace(/\"/, \"\\\\\\\"\") + \"\\\"\"\n                            break\n                        case \"object\":\n                            if (value instanceof RegExp)\n                                out += \"/\" +\n                                    value.toString()\n                                    .replace(/^\\//, \"\")\n                                    .replace(/\\/$/, \"\")\n                                    .replace(/\\//g, \"\\\\/\") +\n                                \"/\"\n                            else\n                                out += JSON.stringify(value)\n                            break\n                        default:\n                            out += JSON.stringify(value)\n                            break\n                    }\n                })\n                out += \") \"\n            }\n            out += \"[\" + node.P.L + \"/\" + node.P.C + \"]\\n\"\n        }, \"downward\")\n        return out\n    }\n}\n\nmodule.exports = ASTYDump\n\n","/*\n**  ASTy -- Generic Abstract Syntax Tree (AST)\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nclass ASTQuery {\n}\n\nmodule.exports = ASTQuery\n\n","/*\n**  ASTy -- Generic Abstract Syntax Tree (AST)\n**  Copyright (c) 2014 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase  = require(\"./asty-base.js\");\nvar ASTYQuery = require(\"./asty-query.js\");\nvar mixins    = require(\"./asty-mixins.js\");\n\nvar ASTY = class ASTY extends mixins(ASTYBase, ASTYQuery) {\n    constructor () {\n        if (!(this instanceof ASTY)) {\n            var self = new ASTY(\"\")\n            return self.init.apply(self, arguments);\n        }\n        else\n            return this.init.apply(this, arguments);\n    }\n}\n\nmodule.exports = ASTY\n\n"]}